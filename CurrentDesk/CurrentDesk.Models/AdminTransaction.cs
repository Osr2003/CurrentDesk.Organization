
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class AdminTransaction
{
    #region Primitive Properties
    

    public virtual int PK_TransactionID
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> TransactionDate
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_UserID
    {

        get { return _fK_UserID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_UserID != value)

            {

                if (User1 != null && User1.PK_UserID != value)

                {

                    User1 = null;

                }

                _fK_UserID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_UserID;


    public virtual string AccountNumber
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_FundingSourceID
    {

        get { return _fK_FundingSourceID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_FundingSourceID != value)

            {

                if (FundingSource != null && FundingSource.PK_FundingSourceID != value)

                {

                    FundingSource = null;

                }

                _fK_FundingSourceID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_FundingSourceID;


    public virtual Nullable<int> FK_CurrencyID
    {

        get { return _fK_CurrencyID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_CurrencyID != value)

            {

                if (L_CurrencyValue != null && L_CurrencyValue.PK_CurrencyValueID != value)

                {

                    L_CurrencyValue = null;

                }

                _fK_CurrencyID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_CurrencyID;


    public virtual Nullable<decimal> TransactionAmount
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_AdminTransactionTypeID
    {

        get { return _fK_AdminTransactionTypeID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_AdminTransactionTypeID != value)

            {

                if (L_AdminTransactionType != null && L_AdminTransactionType.PK_AdminTransactionType != value)

                {

                    L_AdminTransactionType = null;

                }

                _fK_AdminTransactionTypeID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_AdminTransactionTypeID;


    public virtual Nullable<bool> IsApproved
    {

        get;
        set;

    }


    public virtual Nullable<bool> IsDeleted
    {

        get;
        set;

    }


    public virtual string Notes
    {

        get;
        set;

    }


    public virtual string ClientName
    {

        get;
        set;

    }


    public virtual Nullable<decimal> FeeAmount
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> ApprovedDate
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_BankInfoID
    {

        get { return _fK_BankInfoID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_BankInfoID != value)

            {

                if (BankAccountInformation != null && BankAccountInformation.PK_BankAccountInformationID != value)

                {

                    BankAccountInformation = null;

                }

                _fK_BankInfoID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_BankInfoID;


    public virtual string ToAccountNumber
    {

        get;
        set;

    }


    public virtual string ToClientName
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_ToUserID
    {

        get { return _fK_ToUserID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ToUserID != value)

            {

                if (User != null && User.PK_UserID != value)

                {

                    User = null;

                }

                _fK_ToUserID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ToUserID;


    public virtual Nullable<double> ExchangeRate
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_ToCurrencyID
    {

        get { return _fK_ToCurrencyID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ToCurrencyID != value)

            {

                if (L_CurrencyValue1 != null && L_CurrencyValue1.PK_CurrencyValueID != value)

                {

                    L_CurrencyValue1 = null;

                }

                _fK_ToCurrencyID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ToCurrencyID;


    public virtual int FK_OrganizationID
    {

        get { return _fK_OrganizationID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_OrganizationID != value)

            {

                if (Organization != null && Organization.PK_OrganizationID != value)

                {

                    Organization = null;

                }

                _fK_OrganizationID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private int _fK_OrganizationID;

        #endregion

        #region Navigation Properties
    


    public virtual L_AdminTransactionType L_AdminTransactionType
    {

        get { return _l_AdminTransactionType; }
        set
        {
            if (!ReferenceEquals(_l_AdminTransactionType, value))
            {
                var previousValue = _l_AdminTransactionType;
                _l_AdminTransactionType = value;
                FixupL_AdminTransactionType(previousValue);
            }
        }
    }
    private L_AdminTransactionType _l_AdminTransactionType;



    public virtual BankAccountInformation BankAccountInformation
    {

        get { return _bankAccountInformation; }
        set
        {
            if (!ReferenceEquals(_bankAccountInformation, value))
            {
                var previousValue = _bankAccountInformation;
                _bankAccountInformation = value;
                FixupBankAccountInformation(previousValue);
            }
        }
    }
    private BankAccountInformation _bankAccountInformation;



    public virtual L_CurrencyValue L_CurrencyValue
    {

        get { return _l_CurrencyValue; }
        set
        {
            if (!ReferenceEquals(_l_CurrencyValue, value))
            {
                var previousValue = _l_CurrencyValue;
                _l_CurrencyValue = value;
                FixupL_CurrencyValue(previousValue);
            }
        }
    }
    private L_CurrencyValue _l_CurrencyValue;



    public virtual FundingSource FundingSource
    {

        get { return _fundingSource; }
        set
        {
            if (!ReferenceEquals(_fundingSource, value))
            {
                var previousValue = _fundingSource;
                _fundingSource = value;
                FixupFundingSource(previousValue);
            }
        }
    }
    private FundingSource _fundingSource;



    public virtual L_CurrencyValue L_CurrencyValue1
    {

        get { return _l_CurrencyValue1; }
        set
        {
            if (!ReferenceEquals(_l_CurrencyValue1, value))
            {
                var previousValue = _l_CurrencyValue1;
                _l_CurrencyValue1 = value;
                FixupL_CurrencyValue1(previousValue);
            }
        }
    }
    private L_CurrencyValue _l_CurrencyValue1;



    public virtual User User
    {

        get { return _user; }
        set
        {
            if (!ReferenceEquals(_user, value))
            {
                var previousValue = _user;
                _user = value;
                FixupUser(previousValue);
            }
        }
    }
    private User _user;



    public virtual User User1
    {

        get { return _user1; }
        set
        {
            if (!ReferenceEquals(_user1, value))
            {
                var previousValue = _user1;
                _user1 = value;
                FixupUser1(previousValue);
            }
        }
    }
    private User _user1;



    public virtual Organization Organization
    {

        get { return _organization; }
        set
        {
            if (!ReferenceEquals(_organization, value))
            {
                var previousValue = _organization;
                _organization = value;
                FixupOrganization(previousValue);
            }
        }
    }
    private Organization _organization;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupL_AdminTransactionType(L_AdminTransactionType previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions.Contains(this))
        {
            previousValue.AdminTransactions.Remove(this);
        }


        if (L_AdminTransactionType != null)
        {
            if (!L_AdminTransactionType.AdminTransactions.Contains(this))
            {
                L_AdminTransactionType.AdminTransactions.Add(this);
            }

            if (FK_AdminTransactionTypeID != L_AdminTransactionType.PK_AdminTransactionType)

            {
                FK_AdminTransactionTypeID = L_AdminTransactionType.PK_AdminTransactionType;
            }

        }

        else if (!_settingFK)

        {

            FK_AdminTransactionTypeID = null;

        }

    }


    private void FixupBankAccountInformation(BankAccountInformation previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions.Contains(this))
        {
            previousValue.AdminTransactions.Remove(this);
        }


        if (BankAccountInformation != null)
        {
            if (!BankAccountInformation.AdminTransactions.Contains(this))
            {
                BankAccountInformation.AdminTransactions.Add(this);
            }

            if (FK_BankInfoID != BankAccountInformation.PK_BankAccountInformationID)

            {
                FK_BankInfoID = BankAccountInformation.PK_BankAccountInformationID;
            }

        }

        else if (!_settingFK)

        {

            FK_BankInfoID = null;

        }

    }


    private void FixupL_CurrencyValue(L_CurrencyValue previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions.Contains(this))
        {
            previousValue.AdminTransactions.Remove(this);
        }


        if (L_CurrencyValue != null)
        {
            if (!L_CurrencyValue.AdminTransactions.Contains(this))
            {
                L_CurrencyValue.AdminTransactions.Add(this);
            }

            if (FK_CurrencyID != L_CurrencyValue.PK_CurrencyValueID)

            {
                FK_CurrencyID = L_CurrencyValue.PK_CurrencyValueID;
            }

        }

        else if (!_settingFK)

        {

            FK_CurrencyID = null;

        }

    }


    private void FixupFundingSource(FundingSource previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions.Contains(this))
        {
            previousValue.AdminTransactions.Remove(this);
        }


        if (FundingSource != null)
        {
            if (!FundingSource.AdminTransactions.Contains(this))
            {
                FundingSource.AdminTransactions.Add(this);
            }

            if (FK_FundingSourceID != FundingSource.PK_FundingSourceID)

            {
                FK_FundingSourceID = FundingSource.PK_FundingSourceID;
            }

        }

        else if (!_settingFK)

        {

            FK_FundingSourceID = null;

        }

    }


    private void FixupL_CurrencyValue1(L_CurrencyValue previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions1.Contains(this))
        {
            previousValue.AdminTransactions1.Remove(this);
        }


        if (L_CurrencyValue1 != null)
        {
            if (!L_CurrencyValue1.AdminTransactions1.Contains(this))
            {
                L_CurrencyValue1.AdminTransactions1.Add(this);
            }

            if (FK_ToCurrencyID != L_CurrencyValue1.PK_CurrencyValueID)

            {
                FK_ToCurrencyID = L_CurrencyValue1.PK_CurrencyValueID;
            }

        }

        else if (!_settingFK)

        {

            FK_ToCurrencyID = null;

        }

    }


    private void FixupUser(User previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions.Contains(this))
        {
            previousValue.AdminTransactions.Remove(this);
        }


        if (User != null)
        {
            if (!User.AdminTransactions.Contains(this))
            {
                User.AdminTransactions.Add(this);
            }

            if (FK_ToUserID != User.PK_UserID)

            {
                FK_ToUserID = User.PK_UserID;
            }

        }

        else if (!_settingFK)

        {

            FK_ToUserID = null;

        }

    }


    private void FixupUser1(User previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions1.Contains(this))
        {
            previousValue.AdminTransactions1.Remove(this);
        }


        if (User1 != null)
        {
            if (!User1.AdminTransactions1.Contains(this))
            {
                User1.AdminTransactions1.Add(this);
            }

            if (FK_UserID != User1.PK_UserID)

            {
                FK_UserID = User1.PK_UserID;
            }

        }

        else if (!_settingFK)

        {

            FK_UserID = null;

        }

    }


    private void FixupOrganization(Organization previousValue)
    {

        if (previousValue != null && previousValue.AdminTransactions.Contains(this))
        {
            previousValue.AdminTransactions.Remove(this);
        }


        if (Organization != null)
        {
            if (!Organization.AdminTransactions.Contains(this))
            {
                Organization.AdminTransactions.Add(this);
            }

            if (FK_OrganizationID != Organization.PK_OrganizationID)

            {
                FK_OrganizationID = Organization.PK_OrganizationID;
            }

        }

    }

        #endregion

    
}

}
