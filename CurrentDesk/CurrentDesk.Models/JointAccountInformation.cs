
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class JointAccountInformation
{
    #region Primitive Properties
    

    public virtual int PK_JointAccountID
    {

        get;
        set;

    }


    public virtual string PrimaryAccountHolderTitle
    {

        get;
        set;

    }


    public virtual string PrimaryAccountHolderFirstName
    {

        get;
        set;

    }


    public virtual string PrimaryAccountHolderMiddleName
    {

        get;
        set;

    }


    public virtual string PrimaryAccountHolderLastName
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> PrimaryAccountHolderBirthDate
    {

        get;
        set;

    }


    public virtual Nullable<bool> PrimaryAccountHolderGender
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_PrimaryAccountHolderCitizenshipCountryID
    {

        get { return _fK_PrimaryAccountHolderCitizenshipCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_PrimaryAccountHolderCitizenshipCountryID != value)

            {

                if (L_Country1 != null && L_Country1.PK_CountryID != value)

                {

                    L_Country1 = null;

                }

                _fK_PrimaryAccountHolderCitizenshipCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_PrimaryAccountHolderCitizenshipCountryID;


    public virtual Nullable<int> FK_PrimaryAccountHolderIDTypeID
    {

        get { return _fK_PrimaryAccountHolderIDTypeID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_PrimaryAccountHolderIDTypeID != value)

            {

                if (L_IDInformationType != null && L_IDInformationType.PK_IDTypeID != value)

                {

                    L_IDInformationType = null;

                }

                _fK_PrimaryAccountHolderIDTypeID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_PrimaryAccountHolderIDTypeID;


    public virtual string PrimaryAccountHolderIDNumber
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_PrimaryAccountHolderResidenceCountryID
    {

        get { return _fK_PrimaryAccountHolderResidenceCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_PrimaryAccountHolderResidenceCountryID != value)

            {

                if (L_Country2 != null && L_Country2.PK_CountryID != value)

                {

                    L_Country2 = null;

                }

                _fK_PrimaryAccountHolderResidenceCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_PrimaryAccountHolderResidenceCountryID;


    public virtual string SecondaryAccountHolderTitle
    {

        get;
        set;

    }


    public virtual string SecondaryAccountHolderFirstName
    {

        get;
        set;

    }


    public virtual string SecondaryAccountHolderMiddleName
    {

        get;
        set;

    }


    public virtual string SecondaryAccountHolderLastName
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> SecondaryAccountHolderBirthDate
    {

        get;
        set;

    }


    public virtual Nullable<bool> SecondaryAccountHolderGender
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_SecondaryAccountHolderCitizenshipCountryID
    {

        get { return _fK_SecondaryAccountHolderCitizenshipCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_SecondaryAccountHolderCitizenshipCountryID != value)

            {

                if (L_Country4 != null && L_Country4.PK_CountryID != value)

                {

                    L_Country4 = null;

                }

                _fK_SecondaryAccountHolderCitizenshipCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_SecondaryAccountHolderCitizenshipCountryID;


    public virtual Nullable<int> FK_SecondaryAccountHolderIDTypeID
    {

        get { return _fK_SecondaryAccountHolderIDTypeID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_SecondaryAccountHolderIDTypeID != value)

            {

                if (L_IDInformationType1 != null && L_IDInformationType1.PK_IDTypeID != value)

                {

                    L_IDInformationType1 = null;

                }

                _fK_SecondaryAccountHolderIDTypeID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_SecondaryAccountHolderIDTypeID;


    public virtual string SecondaryAccountHolderIDNumber
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_SecondaryAccountHolderResidenceCountryID
    {

        get { return _fK_SecondaryAccountHolderResidenceCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_SecondaryAccountHolderResidenceCountryID != value)

            {

                if (L_Country5 != null && L_Country5.PK_CountryID != value)

                {

                    L_Country5 = null;

                }

                _fK_SecondaryAccountHolderResidenceCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_SecondaryAccountHolderResidenceCountryID;


    public virtual string ResidentialAddress
    {

        get;
        set;

    }


    public virtual string ResidentialAddressCity
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_ResidentialAddressCountryID
    {

        get { return _fK_ResidentialAddressCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ResidentialAddressCountryID != value)

            {

                if (L_Country != null && L_Country.PK_CountryID != value)

                {

                    L_Country = null;

                }

                _fK_ResidentialAddressCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ResidentialAddressCountryID;


    public virtual string ResidentialAddressPostalCode
    {

        get;
        set;

    }


    public virtual Nullable<int> MonthsAtCurrentAddress
    {

        get;
        set;

    }


    public virtual string PreviousAddress
    {

        get;
        set;

    }


    public virtual string PreviousAddressCity
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_PreviousAddressCounrtyID
    {

        get { return _fK_PreviousAddressCounrtyID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_PreviousAddressCounrtyID != value)

            {

                if (L_Country3 != null && L_Country3.PK_CountryID != value)

                {

                    L_Country3 = null;

                }

                _fK_PreviousAddressCounrtyID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_PreviousAddressCounrtyID;


    public virtual string PreviousAddressPostalCode
    {

        get;
        set;

    }


    public virtual string TelephoneNumber
    {

        get;
        set;

    }


    public virtual string MobileNumber
    {

        get;
        set;

    }


    public virtual string EmailAddress
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_ClientID
    {

        get { return _fK_ClientID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ClientID != value)

            {

                if (Client != null && Client.PK_ClientID != value)

                {

                    Client = null;

                }

                _fK_ClientID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ClientID;


    public virtual Nullable<int> FK_IntroducingBrokerID
    {

        get { return _fK_IntroducingBrokerID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_IntroducingBrokerID != value)

            {

                if (IntroducingBroker != null && IntroducingBroker.PK_IntroducingBrokerID != value)

                {

                    IntroducingBroker = null;

                }

                _fK_IntroducingBrokerID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_IntroducingBrokerID;


    public virtual string PhoneID
    {

        get;
        set;

    }

        #endregion

        #region Navigation Properties
    


    public virtual IntroducingBroker IntroducingBroker
    {

        get { return _introducingBroker; }
        set
        {
            if (!ReferenceEquals(_introducingBroker, value))
            {
                var previousValue = _introducingBroker;
                _introducingBroker = value;
                FixupIntroducingBroker(previousValue);
            }
        }
    }
    private IntroducingBroker _introducingBroker;



    public virtual L_Country L_Country
    {

        get { return _l_Country; }
        set
        {
            if (!ReferenceEquals(_l_Country, value))
            {
                var previousValue = _l_Country;
                _l_Country = value;
                FixupL_Country(previousValue);
            }
        }
    }
    private L_Country _l_Country;



    public virtual L_IDInformationType L_IDInformationType
    {

        get { return _l_IDInformationType; }
        set
        {
            if (!ReferenceEquals(_l_IDInformationType, value))
            {
                var previousValue = _l_IDInformationType;
                _l_IDInformationType = value;
                FixupL_IDInformationType(previousValue);
            }
        }
    }
    private L_IDInformationType _l_IDInformationType;



    public virtual L_Country L_Country1
    {

        get { return _l_Country1; }
        set
        {
            if (!ReferenceEquals(_l_Country1, value))
            {
                var previousValue = _l_Country1;
                _l_Country1 = value;
                FixupL_Country1(previousValue);
            }
        }
    }
    private L_Country _l_Country1;



    public virtual L_Country L_Country2
    {

        get { return _l_Country2; }
        set
        {
            if (!ReferenceEquals(_l_Country2, value))
            {
                var previousValue = _l_Country2;
                _l_Country2 = value;
                FixupL_Country2(previousValue);
            }
        }
    }
    private L_Country _l_Country2;



    public virtual L_Country L_Country3
    {

        get { return _l_Country3; }
        set
        {
            if (!ReferenceEquals(_l_Country3, value))
            {
                var previousValue = _l_Country3;
                _l_Country3 = value;
                FixupL_Country3(previousValue);
            }
        }
    }
    private L_Country _l_Country3;



    public virtual L_Country L_Country4
    {

        get { return _l_Country4; }
        set
        {
            if (!ReferenceEquals(_l_Country4, value))
            {
                var previousValue = _l_Country4;
                _l_Country4 = value;
                FixupL_Country4(previousValue);
            }
        }
    }
    private L_Country _l_Country4;



    public virtual L_Country L_Country5
    {

        get { return _l_Country5; }
        set
        {
            if (!ReferenceEquals(_l_Country5, value))
            {
                var previousValue = _l_Country5;
                _l_Country5 = value;
                FixupL_Country5(previousValue);
            }
        }
    }
    private L_Country _l_Country5;



    public virtual L_IDInformationType L_IDInformationType1
    {

        get { return _l_IDInformationType1; }
        set
        {
            if (!ReferenceEquals(_l_IDInformationType1, value))
            {
                var previousValue = _l_IDInformationType1;
                _l_IDInformationType1 = value;
                FixupL_IDInformationType1(previousValue);
            }
        }
    }
    private L_IDInformationType _l_IDInformationType1;



    public virtual Client Client
    {

        get { return _client; }
        set
        {
            if (!ReferenceEquals(_client, value))
            {
                var previousValue = _client;
                _client = value;
                FixupClient(previousValue);
            }
        }
    }
    private Client _client;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupIntroducingBroker(IntroducingBroker previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations.Contains(this))
        {
            previousValue.JointAccountInformations.Remove(this);
        }


        if (IntroducingBroker != null)
        {
            if (!IntroducingBroker.JointAccountInformations.Contains(this))
            {
                IntroducingBroker.JointAccountInformations.Add(this);
            }

            if (FK_IntroducingBrokerID != IntroducingBroker.PK_IntroducingBrokerID)

            {
                FK_IntroducingBrokerID = IntroducingBroker.PK_IntroducingBrokerID;
            }

        }

        else if (!_settingFK)

        {

            FK_IntroducingBrokerID = null;

        }

    }


    private void FixupL_Country(L_Country previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations.Contains(this))
        {
            previousValue.JointAccountInformations.Remove(this);
        }


        if (L_Country != null)
        {
            if (!L_Country.JointAccountInformations.Contains(this))
            {
                L_Country.JointAccountInformations.Add(this);
            }

            if (FK_ResidentialAddressCountryID != L_Country.PK_CountryID)

            {
                FK_ResidentialAddressCountryID = L_Country.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_ResidentialAddressCountryID = null;

        }

    }


    private void FixupL_IDInformationType(L_IDInformationType previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations.Contains(this))
        {
            previousValue.JointAccountInformations.Remove(this);
        }


        if (L_IDInformationType != null)
        {
            if (!L_IDInformationType.JointAccountInformations.Contains(this))
            {
                L_IDInformationType.JointAccountInformations.Add(this);
            }

            if (FK_PrimaryAccountHolderIDTypeID != L_IDInformationType.PK_IDTypeID)

            {
                FK_PrimaryAccountHolderIDTypeID = L_IDInformationType.PK_IDTypeID;
            }

        }

        else if (!_settingFK)

        {

            FK_PrimaryAccountHolderIDTypeID = null;

        }

    }


    private void FixupL_Country1(L_Country previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations1.Contains(this))
        {
            previousValue.JointAccountInformations1.Remove(this);
        }


        if (L_Country1 != null)
        {
            if (!L_Country1.JointAccountInformations1.Contains(this))
            {
                L_Country1.JointAccountInformations1.Add(this);
            }

            if (FK_PrimaryAccountHolderCitizenshipCountryID != L_Country1.PK_CountryID)

            {
                FK_PrimaryAccountHolderCitizenshipCountryID = L_Country1.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_PrimaryAccountHolderCitizenshipCountryID = null;

        }

    }


    private void FixupL_Country2(L_Country previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations2.Contains(this))
        {
            previousValue.JointAccountInformations2.Remove(this);
        }


        if (L_Country2 != null)
        {
            if (!L_Country2.JointAccountInformations2.Contains(this))
            {
                L_Country2.JointAccountInformations2.Add(this);
            }

            if (FK_PrimaryAccountHolderResidenceCountryID != L_Country2.PK_CountryID)

            {
                FK_PrimaryAccountHolderResidenceCountryID = L_Country2.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_PrimaryAccountHolderResidenceCountryID = null;

        }

    }


    private void FixupL_Country3(L_Country previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations3.Contains(this))
        {
            previousValue.JointAccountInformations3.Remove(this);
        }


        if (L_Country3 != null)
        {
            if (!L_Country3.JointAccountInformations3.Contains(this))
            {
                L_Country3.JointAccountInformations3.Add(this);
            }

            if (FK_PreviousAddressCounrtyID != L_Country3.PK_CountryID)

            {
                FK_PreviousAddressCounrtyID = L_Country3.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_PreviousAddressCounrtyID = null;

        }

    }


    private void FixupL_Country4(L_Country previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations4.Contains(this))
        {
            previousValue.JointAccountInformations4.Remove(this);
        }


        if (L_Country4 != null)
        {
            if (!L_Country4.JointAccountInformations4.Contains(this))
            {
                L_Country4.JointAccountInformations4.Add(this);
            }

            if (FK_SecondaryAccountHolderCitizenshipCountryID != L_Country4.PK_CountryID)

            {
                FK_SecondaryAccountHolderCitizenshipCountryID = L_Country4.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_SecondaryAccountHolderCitizenshipCountryID = null;

        }

    }


    private void FixupL_Country5(L_Country previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations5.Contains(this))
        {
            previousValue.JointAccountInformations5.Remove(this);
        }


        if (L_Country5 != null)
        {
            if (!L_Country5.JointAccountInformations5.Contains(this))
            {
                L_Country5.JointAccountInformations5.Add(this);
            }

            if (FK_SecondaryAccountHolderResidenceCountryID != L_Country5.PK_CountryID)

            {
                FK_SecondaryAccountHolderResidenceCountryID = L_Country5.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_SecondaryAccountHolderResidenceCountryID = null;

        }

    }


    private void FixupL_IDInformationType1(L_IDInformationType previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations1.Contains(this))
        {
            previousValue.JointAccountInformations1.Remove(this);
        }


        if (L_IDInformationType1 != null)
        {
            if (!L_IDInformationType1.JointAccountInformations1.Contains(this))
            {
                L_IDInformationType1.JointAccountInformations1.Add(this);
            }

            if (FK_SecondaryAccountHolderIDTypeID != L_IDInformationType1.PK_IDTypeID)

            {
                FK_SecondaryAccountHolderIDTypeID = L_IDInformationType1.PK_IDTypeID;
            }

        }

        else if (!_settingFK)

        {

            FK_SecondaryAccountHolderIDTypeID = null;

        }

    }


    private void FixupClient(Client previousValue)
    {

        if (previousValue != null && previousValue.JointAccountInformations.Contains(this))
        {
            previousValue.JointAccountInformations.Remove(this);
        }


        if (Client != null)
        {
            if (!Client.JointAccountInformations.Contains(this))
            {
                Client.JointAccountInformations.Add(this);
            }

            if (FK_ClientID != Client.PK_ClientID)

            {
                FK_ClientID = Client.PK_ClientID;
            }

        }

        else if (!_settingFK)

        {

            FK_ClientID = null;

        }

    }

        #endregion

    
}

}
