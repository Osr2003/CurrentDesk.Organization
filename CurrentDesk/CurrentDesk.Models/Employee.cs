
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class Employee
{
    #region Primitive Properties
    

    public virtual int PK_EmployeeID
    {

        get;
        set;

    }


    public virtual string EmployeeName
    {

        get;
        set;

    }


    public virtual string Title
    {

        get;
        set;

    }


    public virtual string FirstName
    {

        get;
        set;

    }


    public virtual string MiddleName
    {

        get;
        set;

    }


    public virtual string LastName
    {

        get;
        set;

    }


    public virtual string OfficeLocation
    {

        get;
        set;

    }


    public virtual string Address
    {

        get;
        set;

    }


    public virtual string City
    {

        get;
        set;

    }


    public virtual string StateOrProvince
    {

        get;
        set;

    }


    public virtual string Region
    {

        get;
        set;

    }


    public virtual string PostalCode
    {

        get;
        set;

    }


    public virtual string CountryOrRegion
    {

        get;
        set;

    }


    public virtual string HomePhone
    {

        get;
        set;

    }


    public virtual string WorkPhone
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> BirthDate
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> DateHired
    {

        get;
        set;

    }


    public virtual Nullable<decimal> Salary
    {

        get;
        set;

    }


    public virtual string TaskNumber
    {

        get;
        set;

    }


    public virtual Nullable<decimal> BillingRate
    {

        get;
        set;

    }


    public virtual Nullable<short> Deductions
    {

        get;
        set;

    }


    public virtual string SpouseName
    {

        get;
        set;

    }


    public virtual string EmergencyContactName
    {

        get;
        set;

    }


    public virtual string EmergencyContactPhone
    {

        get;
        set;

    }


    public virtual byte[] Photograph
    {

        get;
        set;

    }


    public virtual string Notes
    {

        get;
        set;

    }


    public virtual Nullable<int> DefaultComOnIBVol
    {

        get;
        set;

    }


    public virtual Nullable<int> DefaultComOnACCVol
    {

        get;
        set;

    }


    public virtual byte[] upsite_ts
    {

        get;
        set;

    }

        #endregion

        #region Navigation Properties
    


    public virtual ICollection<LeadNote> LeadNotes
    {
        get
        {
            if (_leadNotes == null)
            {

                var newCollection = new FixupCollection<LeadNote>();
                newCollection.CollectionChanged += FixupLeadNotes;
                _leadNotes = newCollection;

            }
            return _leadNotes;
        }
        set
        {

            if (!ReferenceEquals(_leadNotes, value))
            {
                var previousValue = _leadNotes as FixupCollection<LeadNote>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupLeadNotes;
                }
                _leadNotes = value;
                var newValue = value as FixupCollection<LeadNote>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupLeadNotes;
                }
            }

        }
    }
    private ICollection<LeadNote> _leadNotes;



    public virtual ICollection<R_Employee_Client> R_Employee_Client
    {
        get
        {
            if (_r_Employee_Client == null)
            {

                var newCollection = new FixupCollection<R_Employee_Client>();
                newCollection.CollectionChanged += FixupR_Employee_Client;
                _r_Employee_Client = newCollection;

            }
            return _r_Employee_Client;
        }
        set
        {

            if (!ReferenceEquals(_r_Employee_Client, value))
            {
                var previousValue = _r_Employee_Client as FixupCollection<R_Employee_Client>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupR_Employee_Client;
                }
                _r_Employee_Client = value;
                var newValue = value as FixupCollection<R_Employee_Client>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupR_Employee_Client;
                }
            }

        }
    }
    private ICollection<R_Employee_Client> _r_Employee_Client;



    public virtual ICollection<R_Employee_IntroducingBroker> R_Employee_IntroducingBroker
    {
        get
        {
            if (_r_Employee_IntroducingBroker == null)
            {

                var newCollection = new FixupCollection<R_Employee_IntroducingBroker>();
                newCollection.CollectionChanged += FixupR_Employee_IntroducingBroker;
                _r_Employee_IntroducingBroker = newCollection;

            }
            return _r_Employee_IntroducingBroker;
        }
        set
        {

            if (!ReferenceEquals(_r_Employee_IntroducingBroker, value))
            {
                var previousValue = _r_Employee_IntroducingBroker as FixupCollection<R_Employee_IntroducingBroker>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupR_Employee_IntroducingBroker;
                }
                _r_Employee_IntroducingBroker = value;
                var newValue = value as FixupCollection<R_Employee_IntroducingBroker>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupR_Employee_IntroducingBroker;
                }
            }

        }
    }
    private ICollection<R_Employee_IntroducingBroker> _r_Employee_IntroducingBroker;

        #endregion

        #region Association Fixup
    

    private void FixupLeadNotes(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (LeadNote item in e.NewItems)
            {

                item.Employee = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (LeadNote item in e.OldItems)
            {

                if (ReferenceEquals(item.Employee, this))
                {
                    item.Employee = null;
                }

            }
        }
    }


    private void FixupR_Employee_Client(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (R_Employee_Client item in e.NewItems)
            {

                item.Employee = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (R_Employee_Client item in e.OldItems)
            {

                if (ReferenceEquals(item.Employee, this))
                {
                    item.Employee = null;
                }

            }
        }
    }


    private void FixupR_Employee_IntroducingBroker(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (R_Employee_IntroducingBroker item in e.NewItems)
            {

                item.Employee = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (R_Employee_IntroducingBroker item in e.OldItems)
            {

                if (ReferenceEquals(item.Employee, this))
                {
                    item.Employee = null;
                }

            }
        }
    }

        #endregion

    
}

}
