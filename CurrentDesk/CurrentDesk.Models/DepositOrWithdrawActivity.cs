
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class DepositOrWithdrawActivity
{
    #region Primitive Properties
    

    public virtual int PK_DepositWithdrawActivityID
    {

        get;
        set;

    }


    public virtual string Type
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_CurrencyID
    {

        get { return _fK_CurrencyID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_CurrencyID != value)

            {

                if (L_CurrencyValue != null && L_CurrencyValue.PK_CurrencyValueID != value)

                {

                    L_CurrencyValue = null;

                }

                _fK_CurrencyID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_CurrencyID;


    public virtual Nullable<decimal> Amount
    {

        get;
        set;

    }


    public virtual string AccountNumber
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_BankID
    {

        get { return _fK_BankID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_BankID != value)

            {

                if (BankAccountInformation != null && BankAccountInformation.PK_BankAccountInformationID != value)

                {

                    BankAccountInformation = null;

                }

                _fK_BankID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_BankID;


    public virtual Nullable<int> FK_UserActivityID
    {

        get { return _fK_UserActivityID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_UserActivityID != value)

            {

                if (UserActivity != null && UserActivity.PK_UserActivityID != value)

                {

                    UserActivity = null;

                }

                _fK_UserActivityID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_UserActivityID;


    public virtual string TransferStatus
    {

        get;
        set;

    }

        #endregion

        #region Navigation Properties
    


    public virtual BankAccountInformation BankAccountInformation
    {

        get { return _bankAccountInformation; }
        set
        {
            if (!ReferenceEquals(_bankAccountInformation, value))
            {
                var previousValue = _bankAccountInformation;
                _bankAccountInformation = value;
                FixupBankAccountInformation(previousValue);
            }
        }
    }
    private BankAccountInformation _bankAccountInformation;



    public virtual L_CurrencyValue L_CurrencyValue
    {

        get { return _l_CurrencyValue; }
        set
        {
            if (!ReferenceEquals(_l_CurrencyValue, value))
            {
                var previousValue = _l_CurrencyValue;
                _l_CurrencyValue = value;
                FixupL_CurrencyValue(previousValue);
            }
        }
    }
    private L_CurrencyValue _l_CurrencyValue;



    public virtual UserActivity UserActivity
    {

        get { return _userActivity; }
        set
        {
            if (!ReferenceEquals(_userActivity, value))
            {
                var previousValue = _userActivity;
                _userActivity = value;
                FixupUserActivity(previousValue);
            }
        }
    }
    private UserActivity _userActivity;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupBankAccountInformation(BankAccountInformation previousValue)
    {

        if (previousValue != null && previousValue.DepositOrWithdrawActivities.Contains(this))
        {
            previousValue.DepositOrWithdrawActivities.Remove(this);
        }


        if (BankAccountInformation != null)
        {
            if (!BankAccountInformation.DepositOrWithdrawActivities.Contains(this))
            {
                BankAccountInformation.DepositOrWithdrawActivities.Add(this);
            }

            if (FK_BankID != BankAccountInformation.PK_BankAccountInformationID)

            {
                FK_BankID = BankAccountInformation.PK_BankAccountInformationID;
            }

        }

        else if (!_settingFK)

        {

            FK_BankID = null;

        }

    }


    private void FixupL_CurrencyValue(L_CurrencyValue previousValue)
    {

        if (previousValue != null && previousValue.DepositOrWithdrawActivities.Contains(this))
        {
            previousValue.DepositOrWithdrawActivities.Remove(this);
        }


        if (L_CurrencyValue != null)
        {
            if (!L_CurrencyValue.DepositOrWithdrawActivities.Contains(this))
            {
                L_CurrencyValue.DepositOrWithdrawActivities.Add(this);
            }

            if (FK_CurrencyID != L_CurrencyValue.PK_CurrencyValueID)

            {
                FK_CurrencyID = L_CurrencyValue.PK_CurrencyValueID;
            }

        }

        else if (!_settingFK)

        {

            FK_CurrencyID = null;

        }

    }


    private void FixupUserActivity(UserActivity previousValue)
    {

        if (previousValue != null && previousValue.DepositOrWithdrawActivities.Contains(this))
        {
            previousValue.DepositOrWithdrawActivities.Remove(this);
        }


        if (UserActivity != null)
        {
            if (!UserActivity.DepositOrWithdrawActivities.Contains(this))
            {
                UserActivity.DepositOrWithdrawActivities.Add(this);
            }

            if (FK_UserActivityID != UserActivity.PK_UserActivityID)

            {
                FK_UserActivityID = UserActivity.PK_UserActivityID;
            }

        }

        else if (!_settingFK)

        {

            FK_UserActivityID = null;

        }

    }

        #endregion

    
}

}
