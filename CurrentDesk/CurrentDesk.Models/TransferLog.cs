
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class TransferLog
{
    #region Primitive Properties
    

    public virtual int PK_TransferLogID
    {

        get;
        set;

    }


    public virtual Nullable<int> CurrencyID
    {

        get;
        set;

    }


    public virtual Nullable<decimal> Amount
    {

        get;
        set;

    }


    public virtual string TransactionType
    {

        get;
        set;

    }


    public virtual string AccountNumber
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> TransactionDateTime
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_TransactionID
    {

        get { return _fK_TransactionID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_TransactionID != value)

            {

                if (Transaction != null && Transaction.PK_TransactionID != value)

                {

                    Transaction = null;

                }

                _fK_TransactionID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_TransactionID;

        #endregion

        #region Navigation Properties
    


    public virtual Transaction Transaction
    {

        get { return _transaction; }
        set
        {
            if (!ReferenceEquals(_transaction, value))
            {
                var previousValue = _transaction;
                _transaction = value;
                FixupTransaction(previousValue);
            }
        }
    }
    private Transaction _transaction;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupTransaction(Transaction previousValue)
    {

        if (previousValue != null && previousValue.TransferLogs.Contains(this))
        {
            previousValue.TransferLogs.Remove(this);
        }


        if (Transaction != null)
        {
            if (!Transaction.TransferLogs.Contains(this))
            {
                Transaction.TransferLogs.Add(this);
            }

            if (FK_TransactionID != Transaction.PK_TransactionID)

            {
                FK_TransactionID = Transaction.PK_TransactionID;
            }

        }

        else if (!_settingFK)

        {

            FK_TransactionID = null;

        }

    }

        #endregion

    
}

}
