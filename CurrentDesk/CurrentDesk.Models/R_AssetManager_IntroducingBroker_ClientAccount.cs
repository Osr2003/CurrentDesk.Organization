
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class R_AssetManager_IntroducingBroker_ClientAccount
{
    #region Primitive Properties
    

    public virtual int PK_IBAMAcctRelnID
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_IBID
    {

        get { return _fK_IBID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_IBID != value)

            {

                if (IntroducingBroker != null && IntroducingBroker.PK_IntroducingBrokerID != value)

                {

                    IntroducingBroker = null;

                }

                _fK_IBID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_IBID;


    public virtual Nullable<int> FK_AMClientAccountID
    {

        get { return _fK_AMClientAccountID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_AMClientAccountID != value)

            {

                if (Client_Account != null && Client_Account.PK_ClientAccountID != value)

                {

                    Client_Account = null;

                }

                _fK_AMClientAccountID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_AMClientAccountID;


    public virtual Nullable<int> FK_ClientAccountID
    {

        get { return _fK_ClientAccountID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ClientAccountID != value)

            {

                if (Client_Account1 != null && Client_Account1.PK_ClientAccountID != value)

                {

                    Client_Account1 = null;

                }

                _fK_ClientAccountID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ClientAccountID;


    public virtual Nullable<double> ManagementFee
    {

        get;
        set;

    }


    public virtual Nullable<double> PerformanceFee
    {

        get;
        set;

    }


    public virtual Nullable<double> Comission
    {

        get;
        set;

    }


    public virtual Nullable<double> MangementFeeShare
    {

        get;
        set;

    }


    public virtual Nullable<double> PerformanceFeeShare
    {

        get;
        set;

    }


    public virtual Nullable<double> CommissionFeeShare
    {

        get;
        set;

    }


    public virtual Nullable<bool> IsIntroducingBrokerAssetManger
    {

        get;
        set;

    }


    public virtual Nullable<decimal> HMW
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> JoinDate
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> LeaveDate
    {

        get;
        set;

    }


    public virtual Nullable<double> AllocationRatio
    {

        get;
        set;

    }

        #endregion

        #region Navigation Properties
    


    public virtual IntroducingBroker IntroducingBroker
    {

        get { return _introducingBroker; }
        set
        {
            if (!ReferenceEquals(_introducingBroker, value))
            {
                var previousValue = _introducingBroker;
                _introducingBroker = value;
                FixupIntroducingBroker(previousValue);
            }
        }
    }
    private IntroducingBroker _introducingBroker;



    public virtual Client_Account Client_Account
    {

        get { return _client_Account; }
        set
        {
            if (!ReferenceEquals(_client_Account, value))
            {
                var previousValue = _client_Account;
                _client_Account = value;
                FixupClient_Account(previousValue);
            }
        }
    }
    private Client_Account _client_Account;



    public virtual Client_Account Client_Account1
    {

        get { return _client_Account1; }
        set
        {
            if (!ReferenceEquals(_client_Account1, value))
            {
                var previousValue = _client_Account1;
                _client_Account1 = value;
                FixupClient_Account1(previousValue);
            }
        }
    }
    private Client_Account _client_Account1;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupIntroducingBroker(IntroducingBroker previousValue)
    {

        if (previousValue != null && previousValue.R_AssetManager_IntroducingBroker_ClientAccount.Contains(this))
        {
            previousValue.R_AssetManager_IntroducingBroker_ClientAccount.Remove(this);
        }


        if (IntroducingBroker != null)
        {
            if (!IntroducingBroker.R_AssetManager_IntroducingBroker_ClientAccount.Contains(this))
            {
                IntroducingBroker.R_AssetManager_IntroducingBroker_ClientAccount.Add(this);
            }

            if (FK_IBID != IntroducingBroker.PK_IntroducingBrokerID)

            {
                FK_IBID = IntroducingBroker.PK_IntroducingBrokerID;
            }

        }

        else if (!_settingFK)

        {

            FK_IBID = null;

        }

    }


    private void FixupClient_Account(Client_Account previousValue)
    {

        if (previousValue != null && previousValue.R_AssetManager_IntroducingBroker_ClientAccount.Contains(this))
        {
            previousValue.R_AssetManager_IntroducingBroker_ClientAccount.Remove(this);
        }


        if (Client_Account != null)
        {
            if (!Client_Account.R_AssetManager_IntroducingBroker_ClientAccount.Contains(this))
            {
                Client_Account.R_AssetManager_IntroducingBroker_ClientAccount.Add(this);
            }

            if (FK_AMClientAccountID != Client_Account.PK_ClientAccountID)

            {
                FK_AMClientAccountID = Client_Account.PK_ClientAccountID;
            }

        }

        else if (!_settingFK)

        {

            FK_AMClientAccountID = null;

        }

    }


    private void FixupClient_Account1(Client_Account previousValue)
    {

        if (previousValue != null && previousValue.R_AssetManager_IntroducingBroker_ClientAccount1.Contains(this))
        {
            previousValue.R_AssetManager_IntroducingBroker_ClientAccount1.Remove(this);
        }


        if (Client_Account1 != null)
        {
            if (!Client_Account1.R_AssetManager_IntroducingBroker_ClientAccount1.Contains(this))
            {
                Client_Account1.R_AssetManager_IntroducingBroker_ClientAccount1.Add(this);
            }

            if (FK_ClientAccountID != Client_Account1.PK_ClientAccountID)

            {
                FK_ClientAccountID = Client_Account1.PK_ClientAccountID;
            }

        }

        else if (!_settingFK)

        {

            FK_ClientAccountID = null;

        }

    }

        #endregion

    
}

}
