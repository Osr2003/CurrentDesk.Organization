
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class IndividualAccountInformation
{
    #region Primitive Properties
    

    public virtual int PK_IndividualAccountID
    {

        get;
        set;

    }


    public virtual string Title
    {

        get;
        set;

    }


    public virtual string FirstName
    {

        get;
        set;

    }


    public virtual string MiddleName
    {

        get;
        set;

    }


    public virtual string LastName
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> BirthDate
    {

        get;
        set;

    }


    public virtual Nullable<bool> Gender
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_CitizenShipCountryID
    {

        get { return _fK_CitizenShipCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_CitizenShipCountryID != value)

            {

                if (L_Country != null && L_Country.PK_CountryID != value)

                {

                    L_Country = null;

                }

                _fK_CitizenShipCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_CitizenShipCountryID;


    public virtual Nullable<int> FK_IDInformationID
    {

        get { return _fK_IDInformationID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_IDInformationID != value)

            {

                if (L_IDInformationType != null && L_IDInformationType.PK_IDTypeID != value)

                {

                    L_IDInformationType = null;

                }

                _fK_IDInformationID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_IDInformationID;


    public virtual string IDNumber
    {

        get;
        set;

    }


    public virtual int FK_ResidenceCountryID
    {

        get { return _fK_ResidenceCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ResidenceCountryID != value)

            {

                if (L_Country1 != null && L_Country1.PK_CountryID != value)

                {

                    L_Country1 = null;

                }

                _fK_ResidenceCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private int _fK_ResidenceCountryID;


    public virtual string ResidentialAddress
    {

        get;
        set;

    }


    public virtual string ResidentialAddressCity
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_ResidentialAddressCountryID
    {

        get { return _fK_ResidentialAddressCountryID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ResidentialAddressCountryID != value)

            {

                if (L_Country3 != null && L_Country3.PK_CountryID != value)

                {

                    L_Country3 = null;

                }

                _fK_ResidentialAddressCountryID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ResidentialAddressCountryID;


    public virtual string ResidentialAddressPostalCode
    {

        get;
        set;

    }


    public virtual Nullable<int> MonthsAtCurrentAddress
    {

        get;
        set;

    }


    public virtual string PreviousAddress
    {

        get;
        set;

    }


    public virtual string PreviousAddressCity
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_PreviousAddressCounrtyID
    {

        get { return _fK_PreviousAddressCounrtyID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_PreviousAddressCounrtyID != value)

            {

                if (L_Country2 != null && L_Country2.PK_CountryID != value)

                {

                    L_Country2 = null;

                }

                _fK_PreviousAddressCounrtyID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_PreviousAddressCounrtyID;


    public virtual string PreviousAddressPostalCode
    {

        get;
        set;

    }


    public virtual string TelephoneNumber
    {

        get;
        set;

    }


    public virtual string MobileNumber
    {

        get;
        set;

    }


    public virtual string EmailAddress
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_ClientID
    {

        get { return _fK_ClientID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ClientID != value)

            {

                if (Client != null && Client.PK_ClientID != value)

                {

                    Client = null;

                }

                _fK_ClientID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ClientID;


    public virtual Nullable<int> FK_IntroducingBrokerID
    {

        get { return _fK_IntroducingBrokerID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_IntroducingBrokerID != value)

            {

                if (IntroducingBroker != null && IntroducingBroker.PK_IntroducingBrokerID != value)

                {

                    IntroducingBroker = null;

                }

                _fK_IntroducingBrokerID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_IntroducingBrokerID;


    public virtual string PhoneID
    {

        get;
        set;

    }


    public virtual string Status
    {

        get;
        set;

    }


    public virtual Nullable<double> TaxRate
    {

        get;
        set;

    }


    public virtual string Agent
    {

        get;
        set;

    }


    public virtual string State
    {

        get;
        set;

    }

        #endregion

        #region Navigation Properties
    


    public virtual L_IDInformationType L_IDInformationType
    {

        get { return _l_IDInformationType; }
        set
        {
            if (!ReferenceEquals(_l_IDInformationType, value))
            {
                var previousValue = _l_IDInformationType;
                _l_IDInformationType = value;
                FixupL_IDInformationType(previousValue);
            }
        }
    }
    private L_IDInformationType _l_IDInformationType;



    public virtual IntroducingBroker IntroducingBroker
    {

        get { return _introducingBroker; }
        set
        {
            if (!ReferenceEquals(_introducingBroker, value))
            {
                var previousValue = _introducingBroker;
                _introducingBroker = value;
                FixupIntroducingBroker(previousValue);
            }
        }
    }
    private IntroducingBroker _introducingBroker;



    public virtual L_Country L_Country
    {

        get { return _l_Country; }
        set
        {
            if (!ReferenceEquals(_l_Country, value))
            {
                var previousValue = _l_Country;
                _l_Country = value;
                FixupL_Country(previousValue);
            }
        }
    }
    private L_Country _l_Country;



    public virtual L_Country L_Country1
    {

        get { return _l_Country1; }
        set
        {
            if (!ReferenceEquals(_l_Country1, value))
            {
                var previousValue = _l_Country1;
                _l_Country1 = value;
                FixupL_Country1(previousValue);
            }
        }
    }
    private L_Country _l_Country1;



    public virtual L_Country L_Country2
    {

        get { return _l_Country2; }
        set
        {
            if (!ReferenceEquals(_l_Country2, value))
            {
                var previousValue = _l_Country2;
                _l_Country2 = value;
                FixupL_Country2(previousValue);
            }
        }
    }
    private L_Country _l_Country2;



    public virtual L_Country L_Country3
    {

        get { return _l_Country3; }
        set
        {
            if (!ReferenceEquals(_l_Country3, value))
            {
                var previousValue = _l_Country3;
                _l_Country3 = value;
                FixupL_Country3(previousValue);
            }
        }
    }
    private L_Country _l_Country3;



    public virtual Client Client
    {

        get { return _client; }
        set
        {
            if (!ReferenceEquals(_client, value))
            {
                var previousValue = _client;
                _client = value;
                FixupClient(previousValue);
            }
        }
    }
    private Client _client;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupL_IDInformationType(L_IDInformationType previousValue)
    {

        if (previousValue != null && previousValue.IndividualAccountInformations.Contains(this))
        {
            previousValue.IndividualAccountInformations.Remove(this);
        }


        if (L_IDInformationType != null)
        {
            if (!L_IDInformationType.IndividualAccountInformations.Contains(this))
            {
                L_IDInformationType.IndividualAccountInformations.Add(this);
            }

            if (FK_IDInformationID != L_IDInformationType.PK_IDTypeID)

            {
                FK_IDInformationID = L_IDInformationType.PK_IDTypeID;
            }

        }

        else if (!_settingFK)

        {

            FK_IDInformationID = null;

        }

    }


    private void FixupIntroducingBroker(IntroducingBroker previousValue)
    {

        if (previousValue != null && previousValue.IndividualAccountInformations.Contains(this))
        {
            previousValue.IndividualAccountInformations.Remove(this);
        }


        if (IntroducingBroker != null)
        {
            if (!IntroducingBroker.IndividualAccountInformations.Contains(this))
            {
                IntroducingBroker.IndividualAccountInformations.Add(this);
            }

            if (FK_IntroducingBrokerID != IntroducingBroker.PK_IntroducingBrokerID)

            {
                FK_IntroducingBrokerID = IntroducingBroker.PK_IntroducingBrokerID;
            }

        }

        else if (!_settingFK)

        {

            FK_IntroducingBrokerID = null;

        }

    }


    private void FixupL_Country(L_Country previousValue)
    {

        if (previousValue != null && previousValue.IndividualAccountInformations.Contains(this))
        {
            previousValue.IndividualAccountInformations.Remove(this);
        }


        if (L_Country != null)
        {
            if (!L_Country.IndividualAccountInformations.Contains(this))
            {
                L_Country.IndividualAccountInformations.Add(this);
            }

            if (FK_CitizenShipCountryID != L_Country.PK_CountryID)

            {
                FK_CitizenShipCountryID = L_Country.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_CitizenShipCountryID = null;

        }

    }


    private void FixupL_Country1(L_Country previousValue)
    {

        if (previousValue != null && previousValue.IndividualAccountInformations1.Contains(this))
        {
            previousValue.IndividualAccountInformations1.Remove(this);
        }


        if (L_Country1 != null)
        {
            if (!L_Country1.IndividualAccountInformations1.Contains(this))
            {
                L_Country1.IndividualAccountInformations1.Add(this);
            }

            if (FK_ResidenceCountryID != L_Country1.PK_CountryID)

            {
                FK_ResidenceCountryID = L_Country1.PK_CountryID;
            }

        }

    }


    private void FixupL_Country2(L_Country previousValue)
    {

        if (previousValue != null && previousValue.IndividualAccountInformations2.Contains(this))
        {
            previousValue.IndividualAccountInformations2.Remove(this);
        }


        if (L_Country2 != null)
        {
            if (!L_Country2.IndividualAccountInformations2.Contains(this))
            {
                L_Country2.IndividualAccountInformations2.Add(this);
            }

            if (FK_PreviousAddressCounrtyID != L_Country2.PK_CountryID)

            {
                FK_PreviousAddressCounrtyID = L_Country2.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_PreviousAddressCounrtyID = null;

        }

    }


    private void FixupL_Country3(L_Country previousValue)
    {

        if (previousValue != null && previousValue.IndividualAccountInformations3.Contains(this))
        {
            previousValue.IndividualAccountInformations3.Remove(this);
        }


        if (L_Country3 != null)
        {
            if (!L_Country3.IndividualAccountInformations3.Contains(this))
            {
                L_Country3.IndividualAccountInformations3.Add(this);
            }

            if (FK_ResidentialAddressCountryID != L_Country3.PK_CountryID)

            {
                FK_ResidentialAddressCountryID = L_Country3.PK_CountryID;
            }

        }

        else if (!_settingFK)

        {

            FK_ResidentialAddressCountryID = null;

        }

    }


    private void FixupClient(Client previousValue)
    {

        if (previousValue != null && previousValue.IndividualAccountInformations.Contains(this))
        {
            previousValue.IndividualAccountInformations.Remove(this);
        }


        if (Client != null)
        {
            if (!Client.IndividualAccountInformations.Contains(this))
            {
                Client.IndividualAccountInformations.Add(this);
            }

            if (FK_ClientID != Client.PK_ClientID)

            {
                FK_ClientID = Client.PK_ClientID;
            }

        }

        else if (!_settingFK)

        {

            FK_ClientID = null;

        }

    }

        #endregion

    
}

}
