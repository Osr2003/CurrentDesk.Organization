
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class ClientNote
{
    #region Primitive Properties
    

    public virtual int PK_ClientNoteID
    {

        get;
        set;

    }


    public virtual string Subject
    {

        get;
        set;

    }


    public virtual string Note
    {

        get;
        set;

    }


    public virtual Nullable<System.DateTime> Timestamp
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_ClientID
    {

        get { return _fK_ClientID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_ClientID != value)

            {

                if (Client != null && Client.PK_ClientID != value)

                {

                    Client = null;

                }

                _fK_ClientID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_ClientID;


    public virtual Nullable<int> FK_IntroducingBrokerUserID
    {

        get { return _fK_IntroducingBrokerUserID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_IntroducingBrokerUserID != value)

            {

                if (User != null && User.PK_UserID != value)

                {

                    User = null;

                }

                _fK_IntroducingBrokerUserID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_IntroducingBrokerUserID;

        #endregion

        #region Navigation Properties
    


    public virtual Client Client
    {

        get { return _client; }
        set
        {
            if (!ReferenceEquals(_client, value))
            {
                var previousValue = _client;
                _client = value;
                FixupClient(previousValue);
            }
        }
    }
    private Client _client;



    public virtual User User
    {

        get { return _user; }
        set
        {
            if (!ReferenceEquals(_user, value))
            {
                var previousValue = _user;
                _user = value;
                FixupUser(previousValue);
            }
        }
    }
    private User _user;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupClient(Client previousValue)
    {

        if (previousValue != null && previousValue.ClientNotes.Contains(this))
        {
            previousValue.ClientNotes.Remove(this);
        }


        if (Client != null)
        {
            if (!Client.ClientNotes.Contains(this))
            {
                Client.ClientNotes.Add(this);
            }

            if (FK_ClientID != Client.PK_ClientID)

            {
                FK_ClientID = Client.PK_ClientID;
            }

        }

        else if (!_settingFK)

        {

            FK_ClientID = null;

        }

    }


    private void FixupUser(User previousValue)
    {

        if (previousValue != null && previousValue.ClientNotes.Contains(this))
        {
            previousValue.ClientNotes.Remove(this);
        }


        if (User != null)
        {
            if (!User.ClientNotes.Contains(this))
            {
                User.ClientNotes.Add(this);
            }

            if (FK_IntroducingBrokerUserID != User.PK_UserID)

            {
                FK_IntroducingBrokerUserID = User.PK_UserID;
            }

        }

        else if (!_settingFK)

        {

            FK_IntroducingBrokerUserID = null;

        }

    }

        #endregion

    
}

}
