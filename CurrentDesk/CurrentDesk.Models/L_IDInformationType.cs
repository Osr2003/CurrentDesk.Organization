
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class L_IDInformationType
{
    #region Primitive Properties
    

    public virtual int PK_IDTypeID
    {

        get;
        set;

    }


    public virtual string IDValue
    {

        get;
        set;

    }


    public virtual int FK_OrganizationID
    {

        get { return _fK_OrganizationID; }
        set
        {

            if (_fK_OrganizationID != value)

            {

                if (Organization != null && Organization.PK_OrganizationID != value)

                {

                    Organization = null;

                }

                _fK_OrganizationID = value;
            }

        }

    }

    private int _fK_OrganizationID;

        #endregion

        #region Navigation Properties
    


    public virtual ICollection<CorporateAccountInformation> CorporateAccountInformations
    {
        get
        {
            if (_corporateAccountInformations == null)
            {

                var newCollection = new FixupCollection<CorporateAccountInformation>();
                newCollection.CollectionChanged += FixupCorporateAccountInformations;
                _corporateAccountInformations = newCollection;

            }
            return _corporateAccountInformations;
        }
        set
        {

            if (!ReferenceEquals(_corporateAccountInformations, value))
            {
                var previousValue = _corporateAccountInformations as FixupCollection<CorporateAccountInformation>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupCorporateAccountInformations;
                }
                _corporateAccountInformations = value;
                var newValue = value as FixupCollection<CorporateAccountInformation>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupCorporateAccountInformations;
                }
            }

        }
    }
    private ICollection<CorporateAccountInformation> _corporateAccountInformations;



    public virtual ICollection<IndividualAccountInformation> IndividualAccountInformations
    {
        get
        {
            if (_individualAccountInformations == null)
            {

                var newCollection = new FixupCollection<IndividualAccountInformation>();
                newCollection.CollectionChanged += FixupIndividualAccountInformations;
                _individualAccountInformations = newCollection;

            }
            return _individualAccountInformations;
        }
        set
        {

            if (!ReferenceEquals(_individualAccountInformations, value))
            {
                var previousValue = _individualAccountInformations as FixupCollection<IndividualAccountInformation>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupIndividualAccountInformations;
                }
                _individualAccountInformations = value;
                var newValue = value as FixupCollection<IndividualAccountInformation>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupIndividualAccountInformations;
                }
            }

        }
    }
    private ICollection<IndividualAccountInformation> _individualAccountInformations;



    public virtual ICollection<JointAccountInformation> JointAccountInformations
    {
        get
        {
            if (_jointAccountInformations == null)
            {

                var newCollection = new FixupCollection<JointAccountInformation>();
                newCollection.CollectionChanged += FixupJointAccountInformations;
                _jointAccountInformations = newCollection;

            }
            return _jointAccountInformations;
        }
        set
        {

            if (!ReferenceEquals(_jointAccountInformations, value))
            {
                var previousValue = _jointAccountInformations as FixupCollection<JointAccountInformation>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupJointAccountInformations;
                }
                _jointAccountInformations = value;
                var newValue = value as FixupCollection<JointAccountInformation>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupJointAccountInformations;
                }
            }

        }
    }
    private ICollection<JointAccountInformation> _jointAccountInformations;



    public virtual ICollection<JointAccountInformation> JointAccountInformations1
    {
        get
        {
            if (_jointAccountInformations1 == null)
            {

                var newCollection = new FixupCollection<JointAccountInformation>();
                newCollection.CollectionChanged += FixupJointAccountInformations1;
                _jointAccountInformations1 = newCollection;

            }
            return _jointAccountInformations1;
        }
        set
        {

            if (!ReferenceEquals(_jointAccountInformations1, value))
            {
                var previousValue = _jointAccountInformations1 as FixupCollection<JointAccountInformation>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupJointAccountInformations1;
                }
                _jointAccountInformations1 = value;
                var newValue = value as FixupCollection<JointAccountInformation>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupJointAccountInformations1;
                }
            }

        }
    }
    private ICollection<JointAccountInformation> _jointAccountInformations1;



    public virtual ICollection<TrustAccountInformation> TrustAccountInformations
    {
        get
        {
            if (_trustAccountInformations == null)
            {

                var newCollection = new FixupCollection<TrustAccountInformation>();
                newCollection.CollectionChanged += FixupTrustAccountInformations;
                _trustAccountInformations = newCollection;

            }
            return _trustAccountInformations;
        }
        set
        {

            if (!ReferenceEquals(_trustAccountInformations, value))
            {
                var previousValue = _trustAccountInformations as FixupCollection<TrustAccountInformation>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupTrustAccountInformations;
                }
                _trustAccountInformations = value;
                var newValue = value as FixupCollection<TrustAccountInformation>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupTrustAccountInformations;
                }
            }

        }
    }
    private ICollection<TrustAccountInformation> _trustAccountInformations;



    public virtual ICollection<TrustAccountInformation> TrustAccountInformations1
    {
        get
        {
            if (_trustAccountInformations1 == null)
            {

                var newCollection = new FixupCollection<TrustAccountInformation>();
                newCollection.CollectionChanged += FixupTrustAccountInformations1;
                _trustAccountInformations1 = newCollection;

            }
            return _trustAccountInformations1;
        }
        set
        {

            if (!ReferenceEquals(_trustAccountInformations1, value))
            {
                var previousValue = _trustAccountInformations1 as FixupCollection<TrustAccountInformation>;
                if (previousValue != null)
                {
                    previousValue.CollectionChanged -= FixupTrustAccountInformations1;
                }
                _trustAccountInformations1 = value;
                var newValue = value as FixupCollection<TrustAccountInformation>;
                if (newValue != null)
                {
                    newValue.CollectionChanged += FixupTrustAccountInformations1;
                }
            }

        }
    }
    private ICollection<TrustAccountInformation> _trustAccountInformations1;



    public virtual Organization Organization
    {

        get { return _organization; }
        set
        {
            if (!ReferenceEquals(_organization, value))
            {
                var previousValue = _organization;
                _organization = value;
                FixupOrganization(previousValue);
            }
        }
    }
    private Organization _organization;

        #endregion

        #region Association Fixup
    

    private void FixupOrganization(Organization previousValue)
    {

        if (previousValue != null && previousValue.L_IDInformationType.Contains(this))
        {
            previousValue.L_IDInformationType.Remove(this);
        }


        if (Organization != null)
        {
            if (!Organization.L_IDInformationType.Contains(this))
            {
                Organization.L_IDInformationType.Add(this);
            }

            if (FK_OrganizationID != Organization.PK_OrganizationID)

            {
                FK_OrganizationID = Organization.PK_OrganizationID;
            }

        }

    }


    private void FixupCorporateAccountInformations(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (CorporateAccountInformation item in e.NewItems)
            {

                item.L_IDInformationType = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (CorporateAccountInformation item in e.OldItems)
            {

                if (ReferenceEquals(item.L_IDInformationType, this))
                {
                    item.L_IDInformationType = null;
                }

            }
        }
    }


    private void FixupIndividualAccountInformations(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (IndividualAccountInformation item in e.NewItems)
            {

                item.L_IDInformationType = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (IndividualAccountInformation item in e.OldItems)
            {

                if (ReferenceEquals(item.L_IDInformationType, this))
                {
                    item.L_IDInformationType = null;
                }

            }
        }
    }


    private void FixupJointAccountInformations(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (JointAccountInformation item in e.NewItems)
            {

                item.L_IDInformationType = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (JointAccountInformation item in e.OldItems)
            {

                if (ReferenceEquals(item.L_IDInformationType, this))
                {
                    item.L_IDInformationType = null;
                }

            }
        }
    }


    private void FixupJointAccountInformations1(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (JointAccountInformation item in e.NewItems)
            {

                item.L_IDInformationType1 = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (JointAccountInformation item in e.OldItems)
            {

                if (ReferenceEquals(item.L_IDInformationType1, this))
                {
                    item.L_IDInformationType1 = null;
                }

            }
        }
    }


    private void FixupTrustAccountInformations(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (TrustAccountInformation item in e.NewItems)
            {

                item.L_IDInformationType = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (TrustAccountInformation item in e.OldItems)
            {

                if (ReferenceEquals(item.L_IDInformationType, this))
                {
                    item.L_IDInformationType = null;
                }

            }
        }
    }


    private void FixupTrustAccountInformations1(object sender, NotifyCollectionChangedEventArgs e)
    {
        if (e.NewItems != null)
        {
            foreach (TrustAccountInformation item in e.NewItems)
            {

                item.L_IDInformationType1 = this;

            }
        }

        if (e.OldItems != null)
        {
            foreach (TrustAccountInformation item in e.OldItems)
            {

                if (ReferenceEquals(item.L_IDInformationType1, this))
                {
                    item.L_IDInformationType1 = null;
                }

            }
        }
    }

        #endregion

    
}

}
