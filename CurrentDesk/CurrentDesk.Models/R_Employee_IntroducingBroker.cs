
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;


namespace CurrentDesk.Models
{

public partial class R_Employee_IntroducingBroker
{
    #region Primitive Properties
    

    public virtual int PK_EmpIBRelnID
    {

        get;
        set;

    }


    public virtual Nullable<int> FK_EmpID
    {

        get { return _fK_EmpID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_EmpID != value)

            {

                if (Employee != null && Employee.PK_EmployeeID != value)

                {

                    Employee = null;

                }

                _fK_EmpID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_EmpID;


    public virtual Nullable<int> FK_IBID
    {

        get { return _fK_IBID; }
        set
        {

            try
            {
                _settingFK = true;

            if (_fK_IBID != value)

            {

                if (IntroducingBroker != null && IntroducingBroker.PK_IntroducingBrokerID != value)

                {

                    IntroducingBroker = null;

                }

                _fK_IBID = value;
            }

            }
            finally
            {
                _settingFK = false;
            }

        }

    }

    private Nullable<int> _fK_IBID;


    public virtual Nullable<double> RevenuePercentage
    {

        get;
        set;

    }

        #endregion

        #region Navigation Properties
    


    public virtual Employee Employee
    {

        get { return _employee; }
        set
        {
            if (!ReferenceEquals(_employee, value))
            {
                var previousValue = _employee;
                _employee = value;
                FixupEmployee(previousValue);
            }
        }
    }
    private Employee _employee;



    public virtual IntroducingBroker IntroducingBroker
    {

        get { return _introducingBroker; }
        set
        {
            if (!ReferenceEquals(_introducingBroker, value))
            {
                var previousValue = _introducingBroker;
                _introducingBroker = value;
                FixupIntroducingBroker(previousValue);
            }
        }
    }
    private IntroducingBroker _introducingBroker;

        #endregion

        #region Association Fixup
    

    private bool _settingFK = false;


    private void FixupEmployee(Employee previousValue)
    {

        if (previousValue != null && previousValue.R_Employee_IntroducingBroker.Contains(this))
        {
            previousValue.R_Employee_IntroducingBroker.Remove(this);
        }


        if (Employee != null)
        {
            if (!Employee.R_Employee_IntroducingBroker.Contains(this))
            {
                Employee.R_Employee_IntroducingBroker.Add(this);
            }

            if (FK_EmpID != Employee.PK_EmployeeID)

            {
                FK_EmpID = Employee.PK_EmployeeID;
            }

        }

        else if (!_settingFK)

        {

            FK_EmpID = null;

        }

    }


    private void FixupIntroducingBroker(IntroducingBroker previousValue)
    {

        if (previousValue != null && previousValue.R_Employee_IntroducingBroker.Contains(this))
        {
            previousValue.R_Employee_IntroducingBroker.Remove(this);
        }


        if (IntroducingBroker != null)
        {
            if (!IntroducingBroker.R_Employee_IntroducingBroker.Contains(this))
            {
                IntroducingBroker.R_Employee_IntroducingBroker.Add(this);
            }

            if (FK_IBID != IntroducingBroker.PK_IntroducingBrokerID)

            {
                FK_IBID = IntroducingBroker.PK_IntroducingBrokerID;
            }

        }

        else if (!_settingFK)

        {

            FK_IBID = null;

        }

    }

        #endregion

    
}

}
