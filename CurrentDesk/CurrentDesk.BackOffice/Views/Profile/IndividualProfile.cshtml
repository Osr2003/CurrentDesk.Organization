@model CurrentDesk.BackOffice.Models.IndividualAccountReviewModel
@{
    ViewBag.Title = "IndividualProfile";
    Layout = "~/Views/Shared/BackOfficeMaster.cshtml";
}

<div class="content-wrapper">

    <!-- This <div> is for 2 column layouts and contains the left column content and a container for the right column background. -->
    <div class="content-table">

        <!-- Left column content goes here. -->
        <div class="content-left">
            <!-- Page Title Bar -->
            <div class="page-title">
                <h1 class="profile"><span class="normal">My Profile : </span><span id="spnHeaderTypeName">Individual Information</span></h1>
            </div>
            <!-- Personal Information Section -->
            <article id="personalInfo">
                <h2 class="inline-block">Personal Information</h2>
                <a class="icon edit togglePerson-link" href="#">Edit</a>
                <div class="content-section">

                    <div id="divPersonalInfo" class="row toggle-show">
                        <!-- This <div> with the classes "columns two border-right" is here to display the right vertical border correctly. This is only here for styling purposes. No content should be added inside. -->
                        <div class="columns two border-right"></div>
                        <div class="columns two text-center">
                            <div class="avatar">
                                <img src="@CurrentDesk.BackOffice.Security.SessionManagement.ImageURL" width="150px" height="130px" onerror="imgError(this);"  alt="" />
                            </div>
                        </div>
                        <div class="columns ten">
                            <ul class="row">
                                <li class="columns two">
                                    <h3>Title</h3>
                                    @Html.DisplayFor(model => model.Title)</li>
                                <li class="columns three">
                                    <h3>First Name</h3>
                                    @Html.DisplayFor(model => model.FirstName)</li>
                                <li class="columns three">
                                    <h3>Middle Name</h3>
                                    @Html.DisplayFor(model => model.MiddleName)</li>
                                <li class="columns four">
                                    <h3>Last Name</h3>
                                    @Html.DisplayFor(model => model.LastName)</li>
                            </ul>
                            <ul class="row border">
                                <li class="columns five">
                                    <h3>Date of Birth</h3>
                                    @Html.DisplayFor(model => model.DobDay)/@Html.DisplayFor(model => model.DobMonth)/@Html.DisplayFor(model => model.DobYear)</li>
                                <li class="columns seven">
                                    <h3>Gender</h3>
                                    @Html.DisplayFor(model => model.Gender)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Citizenship</h3>
                                    @Html.DisplayFor(model => model.Citizenship)</li>
                                <li class="columns seven">
                                    <h3>ID Information</h3>
                                    @Html.DisplayFor(model => model.IdInfo): @Html.DisplayFor(model => model.IdNumber)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns twelve">
                                    <h3>Country of Residence</h3>
                                    @Html.DisplayFor(model => model.ResidenceCountry)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Account Number:</h3>
                                    @Html.DisplayFor(model => model.ClientAccountNumber)</li>
                                <li class="columns seven">
                                    <h3>Phone ID</h3>
                                    <label class="bold-font" id="lblPhoneID">@Html.DisplayFor(model => model.PhoneID)</label></li>
                            </ul>
                        </div>
                    </div>

                    <div id="divPersonalEdit" class="row toggle-hide">
                        <!-- This <div> with the classes "columns two border-right" is here to display the right vertical border correctly. This is only here for styling purposes. No content should be added inside. -->
                        <div class="columns two border-right"></div>
                        <div class="columns two text-center">
                            <div class="avatar">
                                <img id="imgEditSrc" src="@CurrentDesk.BackOffice.Security.SessionManagement.ImageURL" width="150px" height="130px"  onerror="imgError(this);" alt="" />
                            </div>
                            <a class="btn btn-mini" href="#myImageModal" role="button" data-toggle="modal">Change Image</a>
                        </div>
                        <div class="columns ten">
                            <ul class="row">
                                <li class="columns two">
                                    <h3>Title</h3>
                                    @Html.DisplayFor(model => model.Title)</li>
                                <li class="columns three">
                                    <h3>First Name</h3>
                                    @Html.DisplayFor(model => model.FirstName)</li>
                                <li class="columns three">
                                    <h3>Middle Name</h3>
                                    @Html.DisplayFor(model => model.MiddleName)</li>
                                <li class="columns four">
                                    <h3>Last Name</h3>
                                    @Html.DisplayFor(model => model.LastName)</li>
                            </ul>
                            <ul class="row border">
                                <li class="columns five">
                                    <h3>Date of Birth</h3>
                                    @Html.DisplayFor(model => model.DobDay)/@Html.DisplayFor(model => model.DobMonth)/@Html.DisplayFor(model => model.DobYear)</li>
                                <li class="columns seven">
                                    <h3>Gender</h3>
                                    @Html.DisplayFor(model => model.Gender)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Citizenship</h3>
                                    @Html.DisplayFor(model => model.Citizenship)</li>
                                <li class="columns seven">
                                    <h3>ID Information</h3>
                                    @Html.DisplayFor(model => model.IdInfo): @Html.DisplayFor(model => model.IdNumber)</li>
                            </ul>
                            <ul class="row border">
                                <li class="columns twelve">
                                    <h3>Country of Residence</h3>
                                    @Html.DisplayFor(model => model.ResidenceCountry)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Account Number:</h3>
                                    @Html.DisplayFor(model => model.ClientAccountNumber)</li>
                                <li class="columns seven">
                                    <label class="h3" for="PhoneID">Phone ID</label><input id="txtPhoneID" class="width-med" type="text" /></li>
                            </ul>
                        </div>


                    </div>

                </div>
                <div class="button-box toggle-hide text-right">
                    <button class="btn cancelPersonalClick">Cancel</button>
                    <button id="btnIndPersonalInfoSave" class="btn btn-primary">Save Changes</button>
                </div>
            </article>
            <!-- Contact Information Section -->
            <article id="contactInfo">
                <h2 class="inline-block">Contact Information</h2>
                <a class="icon edit toggleContact-link" href="#">Edit</a>
                <div class="content-section">
                    <div id="divContactInfo" class="toggle-show">
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Residential Address</h3>
                                @Html.DisplayFor(model => model.ResidentialAddLine1)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.ResidentialCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.ResidentialCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.ResidentialPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Time At Current Address</h3>
                                @Html.DisplayFor(model => model.YearsInCurrentAdd) years, @Html.DisplayFor(model => model.MonthsInCurrentAdd) months</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Previous Address</h3>
                                @Html.DisplayFor(model => model.PreviousAddLine1)</li>
                        </ul>
                        <ul class="row border">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.PreviousCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.PreviousCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.PreviousPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <h3>Telephone Number</h3>
                                <label class="bold-font" id="lblTelCountryCode">@Html.DisplayFor(model => model.TelNumberCountryCode)</label>
                                -
                                <label class="bold-font" id="lblTelePhoneNumber">@Html.DisplayFor(model => model.TelNumber)</label></li>
                            <li class="columns eight">
                                <h3>Mobile Number</h3>
                                <label class="bold-font" id="lblMobileCountryCode">@Html.DisplayFor(model => model.MobileNumberCountryCode)</label>
                                -
                                <label class="bold-font" id="lblMobileNumber">@Html.DisplayFor(model => model.MobileNumber)</label></li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Email Address</h3>
                                <label class="bold-font" id="lblEmailAddress">@Html.DisplayFor(model => model.EmailAddress)</label></li>
                        </ul>
                    </div>

                    <div id="divContactInfoEdit" class="toggle-hide">
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Residential Address</h3>
                                @Html.DisplayFor(model => model.ResidentialAddLine1)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.ResidentialCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.ResidentialCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.ResidentialPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Time At Current Address</h3>
                                @Html.DisplayFor(model => model.YearsInCurrentAdd) years, @Html.DisplayFor(model => model.MonthsInCurrentAdd) months</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Previous Address</h3>
                                @Html.DisplayFor(model => model.PreviousAddLine1)</li>
                        </ul>
                        <ul class="row border">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.PreviousCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.PreviousCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.PreviousPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <label class="h3" for="Telephone">Telephone Number</label>
                                <input id="txtIndTelephoneCountryCode" class="width-extraSmall" type="text" />
                                <input id="txtIndTelephone" class="width-default" type="text" /></li>
                            <li class="columns eight">
                                <label class="h3" for="Mobile">Mobile Number</label>
                                <input id="txtIndMobileCountryCode" class="width-extraSmall" type="text" />
                                <input id="txtIndMobile" class="width-default" type="text" /></li>
                        </ul>
                        <ul class="row">
                            <li class="columns five">
                                <label class="h3" for="Email">Email Address</label>
                                <input id="txtIndEmail" class="width-med" type="text" /></li>
                            <li class="columns eight"></li>
                        </ul>
                    </div>

                </div>
                <div class="button-box toggle-hide text-right">
                    <button class="btn cancelContactClick">Cancel</button>
                    <button id="btnIndContactInfoSave" class="btn btn-primary">Save Changes</button>
                </div>
            </article>
            <!-- Banking Information Section -->
            <article id="bankingInfo">
                <ul class="button-bar">
                    <li><a id="aAddNewBank" class="btn btn-mini" href="#myModal" role="button" data-toggle="modal">Add Bank Account</a></li>
                </ul>
                <h2>Bank Information</h2>
                @foreach (var item in Model.BankAccountModelList)
                {
                    <h2 class="inline-block">@item.BankName</h2>
                    <a id="@item.BankAccountID" class="icon edit togglebank-link" href="#">Edit</a>
                    <div style="margin-bottom: 10px;" class="content-section">
                        <div class="toggle-show">
                            <ul class="row">
                                <li class="columns four">
                                    <h3>Bank Name</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblBankName" >@Html.DisplayFor(model => item.BankName)</label></li>
                                <li class="columns eight">
                                    <h3>Account Number</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblAccountNumber" >@Html.DisplayFor(model => item.AccountNumber)</label></li>
                            </ul>
                            <ul class="row border">
                                <li class="columns four">
                                    <h3>Bic Number/SWIFT Code</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblBicOrSwiftCode" >@Html.DisplayFor(model => item.BicOrSwiftCode)</label></li>
                                <li class="columns eight">
                                    <h3>Receiving Bank Information</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblReceivingBankInfoId" >@Html.DisplayFor(model => item.ReceivingBankInfoId)</label>
                                    <label class="bold-font" id="@item.BankAccountID-lblReceivingBankInfo" >@Html.DisplayFor(model => item.ReceivingBankInfo)</label></li>
                            </ul>
                            <ul class="row">
                                <li class="columns four">
                                    <h3>Bank Address</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblBankAddLine1" >@Html.DisplayFor(model => item.BankAddLine1)</label>
                                    <label class="bold-font" id="@item.BankAccountID-lblBankAddLine2" >@Html.DisplayFor(model => item.BankAddLine2)</label>
                                </li>
                            </ul>
                            <ul class="row">
                                <li class="columns four">
                                    <h3>City</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblBankCity" >@Html.DisplayFor(model => item.BankCity)</label></li>
                                <li class="columns four">
                                    <h3>Country</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblBankCountry" >@Html.DisplayFor(model => item.BankCountry)</label></li>
                                <li class="columns four">
                                    <h3>Postal Code</h3>
                                    <label class="bold-font" id="@item.BankAccountID-lblBankPostalCode" >@Html.DisplayFor(model => item.BankPostalCode)</label></li>
                            </ul>
                        </div>
                        <div class="toggle-hide">
                            <ul class="row">
                                <li class="columns four">
                                    <label class="h3" for="BankName">Bank Name</label>
                                    @Html.TextBoxFor(model => item.BankName, new { @id = item.BankAccountID + "txtBankName", @class = "input-text width-med" })
                                    <li class="columns eight">
                                        <label class="h3" for="AccountNum">Account Number</label>
                                @Html.TextBoxFor(model => item.AccountNumber, new { @id = item.BankAccountID + "txtAccountNumber", @class = "input-text width-med" })
                            </ul>
                            <ul class="row border">
                                <li class="columns four">
                                    <label class="h3" for="Swift">Bic Number/SWIFT Code</label>
                                    @Html.TextBoxFor(model => item.BicOrSwiftCode, new { @id = item.BankAccountID + "txtBicSwiftCode", @class = "input-text width-med" })
                                </li>
                                <li class="columns eight">
                                    <label class="h3" for="Receiving">Receiving Bank Information</label>
                                    @Html.DropDownListFor(model => model.ReceivingBankInfoId, (IEnumerable<SelectListItem>)ViewData["ReceivingBankInfo"], new { @class = @item.BankAccountID + "chzn-select", style = "width: 150px;", @id = item.BankAccountID + "drpReceivingBankInfoId" })
                                    @Html.TextBoxFor(model => item.ReceivingBankInfo, new { @id = item.BankAccountID + "txtReceivingBankInfo", @class = "input-text width-med margin-left" })
                                </li>
                            </ul>
                            <ul class="row">
                                <li class="columns twelve">
                                    <label class="h3" for="Address">Bank Address</label>
                                    @Html.TextBoxFor(model => item.BankAddLine1, new { @id = item.BankAccountID + "txtBankAddressLine1", @class = "input-text width-med" })
                                </li>
                                <li class="columns twelve">
                                    @Html.TextBoxFor(model => item.BankAddLine2, new { @id = item.BankAccountID + "txtBankAddressLine2", @class = "input-text width-med" })</li>
                            </ul>
                            <ul class="row">
                                <li class="columns four">
                                    <label class="h3" for="City">City</label>
                                    @Html.TextBoxFor(model => item.BankCity, new { @id = item.BankAccountID + "txtBankCity", @class = "input-text width-med" })
                                </li>
                                <li class="columns five">
                                    <label class="h3" for="Country">Country</label>
                                    @Html.DropDownListFor(model => model.BankCountry, (IEnumerable<SelectListItem>)ViewData["Country"], new { @class = @item.BankAccountID + "bankSelect", style = "width: 150px;", @id = item.BankAccountID + "drpBankCountry" })
                                </li>
                                <li class="columns three">
                                    <label class="h3" for="Zip">Postal Code</label>
                                    @Html.TextBoxFor(model => item.BankPostalCode, new { @id = item.BankAccountID + "txtBankPostalCode", @class = "input-text width-small" })
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="button-box toggle-hide text-right">
                        <button class="btn cancelBankClick">Cancel</button>
                        <button id=@item.BankAccountID class="btn btn-primary button-Bank">Save Changes</button>
                    </div>
                }
            </article>
        </div>

        <!-- This <div> is for 2 column layouts as a container for the right column background. -->
        <div class="bg-right"></div>

    </div>

    <!-- Right Column content goes here. -->
    <aside class="content-aside">
        <!-- Sub Navigation Section -->
        <nav class="sub-nav">
            <ul>
                <!-- Add the .active class to the <li> that needs active styling. -->
                <li id="liIndividual" class="active" onclick="showIndividualInfo()"><a class="primary" href="#"><span class="arrow"></span><strong>Individual</strong>Information</a></li>
                <li id="liBanking" onclick="showBankingInfo()"><a class="banking" href="#"><span class="arrow"></span><strong>Banking</strong>Information</a></li>
                <!-- The last <li> needs the class .last. This is only here for styling purposes. No links should be added inside. -->
                <li class="last"></li>
            </ul>
        </nav>
    </aside>

</div>

<!-- Begin Modal Upload Content -->
<div id="myImageModal" class="modal hide fade medium">

    <!-- Modal Header -->
    <div class="modal-header">
        <small class="right required"><strong>*Required Fields</strong></small>
        <h2 class="inline-block h2">Add Image</h2>
    </div>

    <!-- Modal Body -->
    <div class="content-section">
        <ul class="row">
            <li class="columns">
                <input id="fileUploader" type="file" name="file" accept="image/*" /></li>
        </ul>
    </div>

    <!-- Modal Footer -->
    <div class="modal-footer">
        <button id="btnUploadClose" class="btn" data-dismiss="modal">Cancel</button>
        <button id="btnUpload" class="btn btn-primary">Upload</button>
    </div>
</div>

<!-- BEGIN MODAL CONTENT SECTION -->
<div id="myModal" class="modal hide fade xlarge">

    <!-- Modal Header -->
    <div class="modal-header">
        <small class="right required"><strong>*Required Fields</strong></small>
        <h2 class="inline-block h2">New Bank Account Information</h2>
    </div>

    <!-- Modal Body -->
    <div class="content-section">
        <ul class="row">
            <li class="columns four">
                <label class="h3" for="Modal-BankName">
                    Bank Name <span class="required">*</span>
                </label>
                <input id="Modal-BankName" class="width-med" type="text" /></li>
            <li class="columns eight">
                <label class="h3" for="Modal-AccountNum">
                    Account Number <span class="required">*</span>
                </label>
                <input id="Modal-AccountNum" class="width-med" type="text" /></li>
        </ul>
        <ul class="row border">
            <li class="columns four">
                <label class="h3" for="Modal-Swift">
                    Bic Number/SWIFT Code <span class="required">*</span>
                </label>
                <input id="Modal-Swift" class="width-med" type="text" /></li>
            <li class="columns eight">
                <label class="h3" for="Modal-Receiving">Receiving Bank Information <span class="required">*</span></label>
                @Html.DropDownListFor(model => model.ReceivingBankInfoId, (IEnumerable<SelectListItem>)ViewData["ReceivingBankInfo"], new { @id = "drpNewRecievingBankInfo", style = "width: 150px;" })
                <input id="Modal-ReceivingBankInfo" class="width-med margin-left" type="text" />
            </li>
        </ul>
        <ul class="row">
            <li class="columns twelve">
                <label class="h3" for="Modal-Address">Bank Address <span class="required">*</span></label>
                <input id="Modal-Address" class="width-med" type="text" /></li>
            <li class="columns twelve">
                <input id="Address2" class="width-med" type="text" /></li>
        </ul>
        <ul class="row">
            <li class="columns four">
                <label class="h3" for="Modal-City">
                    City <span class="required">*</span>
                </label>
                <input id="Modal-City" class="width-med" type="text" /></li>
            <li class="columns five">
                <label class="h3" for="Modal-Country">Country <span class="required">*</span></label>
                @Html.DropDownListFor(model => model.BankCountry, (IEnumerable<SelectListItem>)ViewData["Country"], new { @id = "drpNewBankCountry", @class = "width-med" })
            </li>
            <li class="columns three">
                <label class="h3" for="Modal-Zip">Postal Code <span class="required">*</span></label><input id="Modal-Zip" class="width-100" type="text" /></li>
        </ul>
    </div>

    <!-- Modal Footer -->
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Cancel</button>
        <button id="btnAddNewBankAccount" class="btn btn-primary">Add Bank Account</button>
    </div>
</div>

<!-- BEGIN MODAL CONTENT SECTION UPDATE ERROR CONFIRMATION -->
<div id="modalConfirmError" class="modal hide fade medium">

    <!-- Modal Header -->
    <div class="modal-header">
        <p class="padding">Some Error Ocurred</p>
    </div>

    <!-- Modal Footer -->
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Close Window</button>
    </div>
</div>
<!-- END MODAL CONTENT SECTION -->

@section Scripts {
    @Scripts.Render("~/bundles/choosen")
    @Scripts.Render("~/bundles/upload")
    @Scripts.Render("~/bundles/bootstrap")
    <script>
        $(document).ready(function () {
            $('.top-nav ul li#clientProfile').addClass('active');
            $('#bankingInfo').hide();
            $("#drpNewRecievingBankInfo").chosen();
            $("#drpNewBankCountry").chosen();

            //Upload Image       
            $('#btnUpload').click(function () {
                if (validateUploadedFile()) {
                    var url = 'http://' + window.location.host + '/Profile/AddImage';
                    $('#fileUploader').upload(url, function (data) {
                        $('#fileUploader').text = "";
                        if (data) {
                            $('#myImageModal').modal('hide');
                            $('#personalInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully uploaded a profile image.</div>');
                            window.location.reload();
                        }
                        else {
                            $('#modalConfirmError').modal('show');
                        }
                    }, 'json');
                }
            });



            //Adding New Bank Account
            $("#btnAddNewBankAccount").click(function () {
                //If valid entries
                if (checkValidNewBankInfoValues()) {
                    $("#loading").show();

                    var values = {
                        "BankName": $('#Modal-BankName').val(),
                        "AccountNumber": $('#Modal-AccountNum').val(),
                        "BicOrSwiftCode": $('#Modal-Swift').val(),
                        "BankAddLine1": $('#Modal-Address').val(),
                        "BankAddLine2": $('#Address2').val(),
                        "ReceivingBankInfoId": $('#drpNewRecievingBankInfo').val(),
                        "ReceivingBankInfo": $('#Modal-ReceivingBankInfo').val(),
                        "BankCity": $('#Modal-City').val(),
                        "BankCountry": $('#drpNewBankCountry').val(),
                        "BankPostalCode": $('#Modal-Zip').val()
                    }
                    $.post("@Url.Action("AddNewBankAccount", "Profile")", values, function (data) {
                        if (data == true) {
                            $("#loading").hide();
                            $('#myModal').modal('hide');
                            $('#bankingInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully added a new bank.</div>');
                            window.location.reload();
                        }
                        else {
                            $("#loading").hide();
                            $('#modalConfirmError').modal('show');
                        }
                    });
                }
            });

            //Functions Related To Bank Information
            //-----------------------------------------------------

            //jQuery custom script when edit button in the icon bar is clicked
            $('.togglebank-link').click(function () {
                var bankID = $(this).attr("id");
                resetBankInfo(bankID);

                $(this).next('.content-section').find('.toggle-show').toggle();
                $(this).next('.content-section').find('.toggle-hide').toggle();
                $(this).nextAll('.button-box').eq(0).show();
                $(this).hide();

                //Set scroll position and focus
                $(window).scrollTop((($(window).outerHeight(true) - 250) / 2) + $(window).scrollTop());
                $('#' + bankID + 'txtBankName').focus();
                return false;
            });

            //jQuery custom script when cancel button is clicked
            $('.cancelBankClick').click(function () {

                $(this).parent().prev('.content-section').find('.toggle-show').toggle();
                $(this).parent().prev('.content-section').find('.toggle-hide').toggle();
                $(this).parent().prev('.content-section').prev('.togglebank-link').show();
                $(this).parent().hide();

                return false;
            });

            //Updating Bank Information
            $('.button-Bank').click(function () {
                var btn = $(this);
                var bankID = $(this).attr("id");
                var bankName = $('#' + bankID + 'txtBankName').val();
                var accountNumber = $('#' + bankID + 'txtAccountNumber').val();
                var bicOrSwiftCode = $('#' + bankID + 'txtBicSwiftCode').val();
                var bankAddLine1 = $('#' + bankID + 'txtBankAddressLine1').val();
                var bankAddLine2 = $('#' + bankID + 'txtBankAddressLine2').val();
                var receivingBankInfoId = $('#' + bankID + 'drpReceivingBankInfoId').val();
                var receivingBankInfo = $('#' + bankID + 'txtReceivingBankInfo').val();
                var bankCity = $('#' + bankID + 'txtBankCity').val();
                var bankCountry = $('#' + bankID + 'drpBankCountry').val();
                var bankPostalCode = $('#' + bankID + 'txtBankPostalCode').val();

                if (checkValidEditBankInfoValues(bankID)) {
                    $("#loading").show();

                    var values = {
                        "BankAccountID": bankID,
                        "BankName": bankName,
                        "AccountNumber": accountNumber,
                        "BicOrSwiftCode": bicOrSwiftCode,
                        "BankAddLine1": bankAddLine1,
                        "BankAddLine2": bankAddLine2,
                        "ReceivingBankInfoId": receivingBankInfoId,
                        "ReceivingBankInfo": receivingBankInfo,
                        "BankCity": bankCity,
                        "BankCountry": bankCountry,
                        "BankPostalCode": bankPostalCode,
                    }

                    $.post("@Url.Action("UpdateBankInformation", "Profile")", values, function (data) {

                        if (data == true) {
                            $("#loading").hide();
                            $('#bankingInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully edited your banking information.</div>');

                            $('#' + bankID + '-lblBankName').text(bankName);
                            $('#' + bankID + '-lblAccountNumber').text(accountNumber);
                            $('#' + bankID + '-lblBicOrSwiftCode').text(bicOrSwiftCode);
                            $('#' + bankID + '-lblBankAddLine1').text(bankAddLine1);
                            $('#' + bankID + '-lblBankAddLine2').text(bankAddLine2);
                            $('#' + bankID + '-lblReceivingBankInfoId').text($('#' + bankID + 'drpReceivingBankInfoId :selected').text());
                            $('#' + bankID + '-lblReceivingBankInfo').text(receivingBankInfo);
                            $('#' + bankID + '-lblBankCity').text(bankCity);
                            $('#' + bankID + '-lblBankCountry').text($('#' + bankID + 'drpBankCountry :selected').text());
                            $('#' + bankID + '-lblBankPostalCode').text(bankPostalCode);

                            btn.parent().prev('.content-section').find('.toggle-show').toggle();
                            btn.parent().prev('.content-section').find('.toggle-hide').toggle();
                            btn.parent().parent().find('.togglebank-link').show();
                            btn.parent().hide();
                        }
                        else {
                            $("#loading").hide();
                            $('#modalConfirmError').modal('show');
                        }

                        return false;
                    });
                }
            });

        });//End of ready

        //------End Individual Contact Info--------------

        //Functions Related To Individual Personal  Information
        //-----------------------------------------------------
        //jQuery custom script when edit button in the icon bar is clicked
        $('.togglePerson-link').click(function () {
            resetIndividualPersonalInfo();

            $('#divPersonalEdit').show();
            $('#divPersonalInfo').hide();
            $(this).nextAll('.button-box').eq(0).show();
            $(this).hide();

            //Set scroll position and focus
            $(window).scrollTop((($(window).outerHeight(true) - 400) / 2) + $(window).scrollTop());
            $('#txtPhoneID').focus();
            return false;
        });

        //jQuery custom script when cancel button is clicked
        $('.cancelPersonalClick').click(function () {
            $('#divPersonalEdit').hide();
            $('#divPersonalInfo').show();
            $(this).parent().prev('.content-section').prev('.togglePerson-link').show();
            $(this).parent().hide();

            return false;
        });

        //Updating Individual Personal Information
        $('#btnIndPersonalInfoSave').click(function () {
            var clickedButton = $(this);
            $('.requiredError').remove();

            if ($('#txtPhoneID').val() != '' && $('#txtPhoneID').val().length <= 30) {
                $("#loading").show();

                var individualPersonalInforamtionValues = {
                    "phoneID": $('#txtPhoneID').val()
                }

                //Post request to update Trust info
                $.post("@Url.Action("UpdateIndividualPersonalInformation", "Profile")", individualPersonalInforamtionValues, function (data) {
                    if (data == true) {
                        $("#loading").hide();

                        $('#personalInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully edited your profile.</div>');

                        $('#lblPhoneID').text($('#txtPhoneID').val());

                        $('.cancelPersonalClick').trigger('click');
                    }
                    else {
                        $("#loading").hide();
                        $('#modalConfirmError').modal('show');
                    }
                });
            }
            else {
                $('.requiredError').remove();
                $('#txtPhoneID').after('<span class="requiredError">*</span>');
            }
        });

        //Function to reset all edit textboxes to present values
        function resetIndividualPersonalInfo() {
            $('#txtPhoneID').val($('#lblPhoneID').text());
        }

        //------End Individual Contact Info--------------

        //Functions Related To Individual Contact  Information
        //---------------------------------

        $('.toggleContact-link').click(function () {
            resetIndividualContactInfo();

            $('#divContactInfo').hide();
            $('#divContactInfoEdit').show();
            $(this).nextAll('.button-box').eq(0).show();
            $(this).hide();

            //Set scroll position and focus
            $(window).scrollTop((($(window).outerHeight(true)) / 2) + $(window).scrollTop());
            $('#txtIndTelephoneCountryCode').focus();
            return false;
        });

        //jQuery custom script when cancel button is clicked
        $('.cancelContactClick').click(function () {
            $('#divContactInfo').show();
            $('#divContactInfoEdit').hide();
            $(this).parent().prev('.content-section').prev('.toggleContact-link').show();
            $(this).parent().hide();

            return false;
        });

        //Function to reset all edit textboxes to present values
        function resetIndividualContactInfo() {
            $('#txtIndTelephoneCountryCode').val($('#lblTelCountryCode').html());
            $('#txtIndTelephone').val($('#lblTelePhoneNumber').html());
            $('#txtIndMobileCountryCode').val($('#lblMobileCountryCode').html());
            $('#txtIndMobile').val($('#lblMobileNumber').html());
            $('#txtIndEmail').val($('#lblEmailAddress').html());
        }

        //Updating Individual Contact Information  
        $('#btnIndContactInfoSave').click(function () {

            if (validateIndividualContactInfoValues()) {
                $("#loading").show();

                var clickedButton = $(this);
                var values = { "emailID": $('#txtIndEmail').val() }
                var individualContactInformationValues = {
                    "TelephoneCountryCode": $('#txtIndTelephoneCountryCode').val(),
                    "TelephoneNumber": $('#txtIndTelephone').val(),
                    "MobileCountryCode": $('#txtIndMobileCountryCode').val(),
                    "MobileNumber": $('#txtIndMobile').val(),
                    "EmailID": $('#txtIndEmail').val()
                }

                //Post request to check if email already exists          
                $.post("@Url.Action("CheckIfDuplicateEmail", "Profile")", values, function (data) {
                    if (data == false) {
                        //Post request to update Trustee Cmpy Contact info
                        $.post("@Url.Action("UpdateIndividualContactInforamation", "Profile")", individualContactInformationValues, function (data) {
                            if (data == true) {
                                $("#loading").hide();
                                $('#personalInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully edited your profile.</div>');

                                $('#lblTelCountryCode').text($('#txtIndTelephoneCountryCode').val());
                                $('#lblTelePhoneNumber').text($('#txtIndTelephone').val());
                                $('#lblMobileCountryCode').text($('#txtIndMobileCountryCode').val());
                                $('#lblMobileNumber').text($('#txtIndMobile').val());
                                $('#lblEmailAddress').text($('#txtIndEmail').val());

                                $('.cancelContactClick').trigger('click');
                            }
                            else {
                                $("#loading").hide();
                                $('#modalConfirmError').modal('show');
                            }
                        });
                    }
                    else if (data == true) {
                        $("#loading").hide();
                        $('#txtIndEmail').after('<span class="requiredError">Email already exists!</span>');
                    }
                    else {
                        $("#loading").hide();
                        $('#modalConfirmError').modal('show');
                    }
                });
            }
        });

        //Function to validate Individual Contact Info values
        function validateIndividualContactInfoValues() {
            $('.requiredError').remove();
            var valid = true;
            var regNumeric = new RegExp("^[0-9]*$");
            var regEmail = /^([a-zA-Z0-9_.-])+@@([a-zA-Z0-9_.-])+\.([a-zA-Z])+([a-zA-Z])+/;

            if ($('#txtIndTelephoneCountryCode').val() == '' || !regNumeric.test($('#txtIndTelephoneCountryCode').val()) || $('#txtIndTelephoneCountryCode').val().length > 10) {
                $('#txtIndTelephoneCountryCode').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if ($('#txtIndTelephone').val() == '' || !regNumeric.test($('#txtIndTelephone').val()) || $('#txtIndTelephone').val().length > 15) {
                $('#txtIndTelephone').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if ($('#txtIndMobileCountryCode').val() == '' || !regNumeric.test($('#txtIndMobileCountryCode').val()) || $('#txtIndMobileCountryCode').val().length > 10) {
                $('#txtIndMobileCountryCode').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if ($('#txtIndMobile').val() == '' || !regNumeric.test($('#txtIndMobile').val()) || $('#txtIndMobile').val().length > 15) {
                $('#txtIndMobile').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if (!regEmail.test($('#txtIndEmail').val()) || $('#txtIndEmail').val().length > 50) {
                $('#txtIndEmail').after('<span class="requiredError">*</span>');
                valid = false;
            }

            return valid;
        }

        //------End Individual Contact Info--------------

        //Function to validate image file to be uploaded
        function validateUploadedFile() {
            $('#uploadErrorID').remove();
            if ($('#fileUploader').val().length == 0) {
                $('#fileUploader').after('<span id="uploadErrorID" class="requiredError">*</span>');
                return false;
            }
            else {
                var fileName = $('#fileUploader').val();
                var fileExt = fileName.split('.').pop().toLowerCase();
                if (fileName.indexOf(".") == -1 || fileExt != "jpg" && fileExt != "tif" && fileExt != "png" && fileExt != "gif") {
                    $('#myImageModal').modal('hide');
                    $('#personalInfo').prepend('<div class="alert alert-error"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>Image file type is not accepted; please upload jpg, png, tif or gif.</div>');
                    return false;
                }
                else {
                    return true;
                }
            }
        }


        //Function to show individual information
        function showIndividualInfo() {
            $('#spnHeaderTypeName').text('Individual Information');
            $('#personalInfo, #contactInfo').show();
            $('#bankingInfo').hide();

            $('#liBanking').removeClass('active');
            $('#liIndividual').addClass('active');
        }

        //Function to show banking information
        function showBankingInfo() {
            $('#spnHeaderTypeName').text('Banking Information');
            $('#personalInfo, #contactInfo').hide();
            $('#bankingInfo').show();

            $('#liIndividual').removeClass('active');
            $('#liBanking').addClass('active');
        }



        //Empty/reset add new bank info textboxes
        $('#aAddNewBank').click(function () {
            $('#Modal-BankName').val('');
            $('#Modal-AccountNum').val('');
            $('#Modal-Swift').val('');
            $('#Modal-Address').val('');
            $('#Address2').val('');
            //$('#drpNewRecievingBankInfo').val();
            $('#Modal-ReceivingBankInfo').val('');
            $('#Modal-City').val('');
            //$('#drpNewBankCountry').val('');
            $('#Modal-Zip').val('');
        });


    </script>
}
