@model CurrentDesk.BackOffice.Models.IndividualAccountReviewModel
@using CurrentDesk.Common
@{
    ViewBag.Title = "PersonalInformation";
    Layout = "~/Areas/IntroducingBroker/Views/Shared/IntroducingBrokerMaster.cshtml";
}

<!-- BEGIN CONTENT SECTION -->
<div class="content-wrapper">

    <!-- This <div> is for 2 column layouts and contains the left column content and a container for the right column background. -->
    <div class="content-table">

        <!-- Left column content goes here. -->
        <div class="content-left">
            <!-- Page Title Bar -->
            <div class="page-title">
                <h1 class="profile"><span class="normal">My Profile :</span> Personal/Contact Information</h1>
            </div>
            <!-- Personal Information Section -->
            <article id="personalInfo">
                <h2 class="inline-block">Personal Information</h2>
                <a class="icon edit togglePerson-link" href="#">Edit</a>
                <div class="content-section">

                    <div class="row toggle-show">
                        <!-- This <div> with the classes "columns two border-right" is here to display the right vertical border correctly. This is only here for styling purposes. No content should be added inside. -->
                        <div class="columns two border-right"></div>
                        <div class="columns two">
                            <div class="avatar">
                                <img src="../@CurrentDesk.BackOffice.Security.SessionManagement.ImageURL" width="150px" height="130px" onerror="imgError(this);"  alt="" />
                            </div>
                        </div>
                        <div class="columns ten">
                            <ul class="row">
                                <li class="columns two">
                                    <h3>Title</h3>
                                    @Html.DisplayFor(model => model.Title)</li>
                                <li class="columns three">
                                    <h3>First Name</h3>
                                    @Html.DisplayFor(model => model.FirstName)</li>
                                <li class="columns three">
                                    <h3>Middle Name</h3>
                                    @Html.DisplayFor(model => model.MiddleName)</li>
                                <li class="columns four">
                                    <h3>Last Name</h3>
                                    @Html.DisplayFor(model => model.LastName)</li>
                            </ul>
                            <ul class="row border">
                                <li class="columns five">
                                    <h3>Date of Birth</h3>
                                    @Html.DisplayFor(model => model.DobDay)/@Html.DisplayFor(model => model.DobMonth)/@Html.DisplayFor(model => model.DobYear)</li>
                                <li class="columns seven">
                                    <h3>Gender</h3>
                                    @Html.DisplayFor(model => model.Gender)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Citizenship</h3>
                                    @Html.DisplayFor(model => model.Citizenship)</li>
                                <li class="columns seven">
                                    <h3>ID Information</h3>
                                    @Html.DisplayFor(model => model.IdInfo): @Html.DisplayFor(model => model.IdNumber)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns twelve">
                                    <h3>Country of Residence</h3>
                                    @Html.DisplayFor(model => model.ResidenceCountry)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Account Number:</h3>
                                    @Html.DisplayFor(model => model.ClientAccountNumber)</li>
                                <li class="columns seven">
                                    <h3>Phone ID</h3>
                                    <label class="bold-font" id="lblPhoneID">@Html.DisplayFor(model => model.PhoneID)</label></li>
                            </ul>
                        </div>
                    </div>

                    <div class="row toggle-hide">
                        <!-- This <div> with the classes "columns two border-right" is here to display the right vertical border correctly. This is only here for styling purposes. No content should be added inside. -->
                        <div class="columns two border-right"></div>
                        <div class="columns two text-center">
                            <div class="avatar">
                                <img id="imgEditSrc" src="../@CurrentDesk.BackOffice.Security.SessionManagement.ImageURL" width="150px" height="130px"  onerror="imgError(this);" alt="" />
                            </div>
                            <a class="btn btn-mini" href="#myImageModal" role="button" data-toggle="modal">Change Image</a>
                        </div>
                        <div class="columns ten">
                            <ul class="row">
                                <li class="columns two">
                                    <h3>Title</h3>
                                    @Html.DisplayFor(model => model.Title)</li>
                                <li class="columns three">
                                    <h3>First Name</h3>
                                    @Html.DisplayFor(model => model.FirstName)</li>
                                <li class="columns three">
                                    <h3>Middle Name</h3>
                                    @Html.DisplayFor(model => model.MiddleName)</li>
                                <li class="columns four">
                                    <h3>Last Name</h3>
                                    @Html.DisplayFor(model => model.LastName)</li>
                            </ul>
                            <ul class="row border">
                                <li class="columns five">
                                    <h3>Date of Birth</h3>
                                    @Html.DisplayFor(model => model.DobDay)/@Html.DisplayFor(model => model.DobMonth)/@Html.DisplayFor(model => model.DobYear)</li>
                                <li class="columns seven">
                                    <h3>Gender</h3>
                                    @Html.DisplayFor(model => model.Gender)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Citizenship</h3>
                                    @Html.DisplayFor(model => model.Citizenship)</li>
                                <li class="columns seven">
                                    <h3>ID Information</h3>
                                    @Html.DisplayFor(model => model.IdInfo): @Html.DisplayFor(model => model.IdNumber)</li>
                            </ul>
                            <ul class="row border">
                                <li class="columns twelve">
                                    <h3>Country of Residence</h3>
                                    @Html.DisplayFor(model => model.ResidenceCountry)</li>
                            </ul>
                            <ul class="row">
                                <li class="columns five">
                                    <h3>Account Number:</h3>
                                    @Html.DisplayFor(model => model.ClientAccountNumber)</li>
                                <li class="columns seven">
                                    <label class="h3" for="PhoneID">Phone ID</label><input id="txtPhoneID" class="width-med" type="text" /></li>
                            </ul>
                        </div>


                    </div>

                </div>
                <div class="button-box toggle-hide text-right">
                    <button class="btn cancelPersonalClick">Cancel</button>
                    <button id="btnIndPersonalInfoSave" class="btn btn-primary">Save Changes</button>
                </div>
            </article>
            <!-- Contact Information Section -->
            <article id="contactInfo">
                <h2 class="inline-block">Contact Information</h2>
                <a class="icon edit toggleContact-link" href="#">Edit</a>
                <div class="content-section">
                    <div class="toggle-show">
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Residential Address</h3>
                                @Html.DisplayFor(model => model.ResidentialAddLine1)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.ResidentialCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.ResidentialCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.ResidentialPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Time At Current Address</h3>
                                @Html.DisplayFor(model => model.YearsInCurrentAdd) years, @Html.DisplayFor(model => model.MonthsInCurrentAdd) months</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Previous Address</h3>
                                @Html.DisplayFor(model => model.PreviousAddLine1)</li>
                        </ul>
                        <ul class="row border">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.PreviousCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.PreviousCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.PreviousPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <h3>Telephone Number</h3>
                                <label class="bold-font" id="lblTelCountryCode">@Html.DisplayFor(model => model.TelNumberCountryCode)</label>
                                -
                                <label class="bold-font" id="lblTelePhoneNumber">@Html.DisplayFor(model => model.TelNumber)</label></li>
                            <li class="columns eight">
                                <h3>Mobile Number</h3>
                                <label class="bold-font" id="lblMobileCountryCode">@Html.DisplayFor(model => model.MobileNumberCountryCode)</label>
                                -
                                <label class="bold-font" id="lblMobileNumber">@Html.DisplayFor(model => model.MobileNumber)</label></li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Email Address</h3>
                                <label class="bold-font" id="lblEmailAddress">@Html.DisplayFor(model => model.EmailAddress)</label></li>
                        </ul>
                    </div>

                    <div class="toggle-hide">
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Residential Address</h3>
                                @Html.DisplayFor(model => model.ResidentialAddLine1)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.ResidentialCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.ResidentialCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.ResidentialPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Time At Current Address</h3>
                                @Html.DisplayFor(model => model.YearsInCurrentAdd) years, @Html.DisplayFor(model => model.MonthsInCurrentAdd) months</li>
                        </ul>
                        <ul class="row">
                            <li class="columns twelve">
                                <h3>Previous Address</h3>
                                @Html.DisplayFor(model => model.PreviousAddLine1)</li>
                        </ul>
                        <ul class="row border">
                            <li class="columns four">
                                <h3>City</h3>
                                @Html.DisplayFor(model => model.PreviousCity)</li>
                            <li class="columns four">
                                <h3>Country</h3>
                                @Html.DisplayFor(model => model.PreviousCountry)</li>
                            <li class="columns four">
                                <h3>Postal Code</h3>
                                @Html.DisplayFor(model => model.PreviousPostalCode)</li>
                        </ul>
                        <ul class="row">
                            <li class="columns four">
                                <label class="h3" for="Telephone">Telephone Number</label>
                                <input id="txtIndTelephoneCountryCode" class="width-extraSmall" type="text" />
                                <input id="txtIndTelephone" class="width-default" type="text" /></li>
                            <li class="columns eight">
                                <label class="h3" for="Mobile">Mobile Number</label>
                                <input id="txtIndMobileCountryCode" class="width-extraSmall" type="text" />
                                <input id="txtIndMobile" class="width-default" type="text" /></li>
                        </ul>
                        <ul class="row">
                            <li class="columns five">
                                <label class="h3" for="Email">Email Address</label>
                                <input id="txtIndEmail" class="width-med" type="text" /></li>
                            <li class="columns eight"></li>
                        </ul>
                    </div>

                </div>
                <div class="button-box toggle-hide text-right">
                    <button class="btn cancelContactClick">Cancel</button>
                    <button id="btnIndContactInfoSave" class="btn btn-primary">Save Changes</button>
                </div>
            </article>
        </div>

        <!-- This <div> is for 2 column layouts as a container for the right column background. -->
        <div class="bg-right"></div>

    </div>

    <!-- Right Column content goes here. -->
    <aside class="content-aside">
        <!-- Sub Navigation Section -->
        <nav class="sub-nav">
            <ul>
                @if (CurrentDesk.BackOffice.Security.SessionManagement.UserInfo.AccountType == Constants.K_PARTNER_INDIVIDUAL)
                {
                    <!-- Add the .active class to the <li> that needs active styling. -->
                    <li class="active"><a class="primary" href="@Url.Action("PersonalInformation", "Profile")"><span class="arrow"></span><strong>Personal/Contact</strong>Information</a></li>
                    <li><a class="banking" href="@Url.Action("Banking", "Profile")"><span class="arrow"></span><strong>Banking</strong>Information</a></li>
                    <li><a class="fees" href="@Url.Action("FeeStructure", "Profile")"><span class="arrow"></span><strong>Fee Group</strong>Management</a></li>
                    <li><a class="managers" href="#"><span class="arrow"></span><strong>Asset Manager</strong>Relationships</a></li>
                    <li><a class="tools" href="@Url.Action("Marketing", "Profile")"><span class="arrow"></span><strong>Marketing</strong>Tools</a></li>
                    <!-- The last <li> needs the class .last. This is only here for styling purposes. No links should be added inside. -->
                    <li class="last"></li>
                }
            </ul>
        </nav>
    </aside>

</div>
<!-- END CONTENT SECTION -->

<!-- Begin Modal Upload Content -->
<div id="myImageModal" class="modal hide fade medium">

    <!-- Modal Header -->
    <div class="modal-header">
        <small class="right required"><strong>*Required Fields</strong></small>
        <h2 class="inline-block h2">Add Image</h2>
    </div>

    <!-- Modal Body -->
    <div class="content-section">
        <ul class="row">
            <li class="columns">
                <input id="fileUploader" type="file" name="file" accept="image/*" /></li>
        </ul>
    </div>

    <!-- Modal Footer -->
    <div class="modal-footer">
        <button id="btnUploadClose" class="btn" data-dismiss="modal">Cancel</button>
        <button id="btnUpload" class="btn btn-primary">Upload</button>
    </div>
</div>

<!-- BEGIN MODAL CONTENT SECTION UPDATE ERROR CONFIRMATION -->
<div id="modalConfirmError" class="modal hide fade medium">

    <!-- Modal Header -->
    <div class="modal-header">
        <p class="padding">Some Error Ocurred</p>
    </div>

    <!-- Modal Footer -->
    <div class="modal-footer">
        <button class="btn" data-dismiss="modal">Close Window</button>
    </div>
</div>
<!-- END MODAL CONTENT SECTION -->

@section Scripts {
    @Scripts.Render("~/bundles/choosen")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/upload")
    <script>
        //Ready function
        $(document).ready(function () {
            $('.top-nav ul li#clientProfile').addClass('active');

            //Upload Image       
            $('#btnUpload').click(function () {
                if (validateUploadedFile()) {
                    var url = 'http://' + window.location.host + '/IntroducingBroker/Profile/AddImage';
                    $('#fileUploader').upload(url, function (data) {
                        $('#fileUploader').text = "";
                        if (data) {
                            $('#myImageModal').modal('hide');
                            $('#personalInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully uploaded a profile image.</div>');
                            window.location.reload();
                        }
                        else {
                            $('#modalConfirmError').modal('show');
                        }
                    }, 'json');
                }
            });

        });//End of ready

        //Function to validate if valid image is being uploaded
        function validateUploadedFile() {
            $('#uploadErrorID').remove();
            if ($('#fileUploader').val().length == 0) {
                $('#fileUploader').after('<span id="uploadErrorID" class="requiredError">*</span>');
                return false;
            }
            else {
                var fileName = $('#fileUploader').val();
                var fileExt = fileName.split('.').pop().toLowerCase();
                if (fileName.indexOf(".") == -1 || fileExt != "jpg" && fileExt != "tif" && fileExt != "png" && fileExt != "gif") {
                    $('#myImageModal').modal('hide');
                    $('#personalInfo').prepend('<div class="alert alert-error"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>Image file type is not accepted; please upload jpg, png, tif or gif.</div>');
                    return false;
                }
                else {
                    return true;
                }
            }
        }

        //Functions Related To Individual Personal  Information
        //-----------------------------------------------------
        //jQuery custom script when edit button in the icon bar is clicked
        $('.togglePerson-link').click(function () {
            resetIndividualPersonalInfo();
            $(this).next('.content-section').find('.toggle-show').toggle();
            $(this).next('.content-section').find('.toggle-hide').toggle();
            $(this).nextAll('.button-box').eq(0).show();
            $(this).hide();

            //Set focus
            $('#txtPhoneID').focus();
            return false;
        });

        //jQuery custom script when cancel button is clicked
        $('.cancelPersonalClick').click(function () {
            $(this).parent().prev('.content-section').find('.toggle-show').toggle();
            $(this).parent().prev('.content-section').find('.toggle-hide').toggle();
            $(this).parent().prev('.content-section').prev('.togglePerson-link').show();
            $(this).parent().hide();

            return false;
        });

        //Function to reset all edit textboxes to present values
        function resetIndividualPersonalInfo() {
            $('#txtPhoneID').val($('#lblPhoneID').text());
        }

        //Updating Individual Personal Information
        $('#btnIndPersonalInfoSave').click(function () {
            var clickedButton = $(this);

            if ($('#txtPhoneID').val() != '' && $('#txtPhoneID').val().length <= 30) {
                $("#loading").show();

                var individualPersonalInforamtionValues = {
                    "phoneID": $('#txtPhoneID').val()
                }

                //Post request to update Trust info
                $.post("@Url.Action("UpdateIndividualPersonalInformation", "Profile")", individualPersonalInforamtionValues, function (data) {
                    if (data == true) {
                        $("#loading").hide();

                        $('#personalInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully edited your profile.</div>');

                        $('#lblPhoneID').text($('#txtPhoneID').val());

                        clickedButton.parent().prev('.content-section').find('.toggle-show').toggle();
                        clickedButton.parent().prev('.content-section').find('.toggle-hide').toggle();
                        clickedButton.parent().parent().find('.togglePerson-link').show();
                        clickedButton.parent().hide();
                    }
                    else {
                        $("#loading").hide();
                        $('#modalConfirmError').modal('show');
                    }
                });
            }
            else {
                $('.requiredError').remove();
                $('#txtPhoneID').after('<span class="requiredError">*</span>');
            }
        });

        //Functions Related To Individual Contact  Information
        //---------------------------------

        $('.toggleContact-link').click(function () {
            resetIndividualContactInfo();
            $(this).next('.content-section').find('.toggle-show').toggle();
            $(this).next('.content-section').find('.toggle-hide').toggle();
            $(this).nextAll('.button-box').eq(0).show();
            $(this).hide();

            //Set scroll position and focus
            $(window).scrollTop((($(window).outerHeight(true)) / 2) + $(window).scrollTop());
            $('#txtIndTelephoneCountryCode').focus();
            return false;
        });

        //jQuery custom script when cancel button is clicked
        $('.cancelContactClick').click(function () {

            $(this).parent().prev('.content-section').find('.toggle-show').toggle();
            $(this).parent().prev('.content-section').find('.toggle-hide').toggle();
            $(this).parent().prev('.content-section').prev('.toggleContact-link').show();
            $(this).parent().hide();

            return false;
        });

        //Function to reset all edit textboxes to present values
        function resetIndividualContactInfo() {
            $('#txtIndTelephoneCountryCode').val($('#lblTelCountryCode').html());
            $('#txtIndTelephone').val($('#lblTelePhoneNumber').html());
            $('#txtIndMobileCountryCode').val($('#lblMobileCountryCode').html());
            $('#txtIndMobile').val($('#lblMobileNumber').html());
            $('#txtIndEmail').val($('#lblEmailAddress').html());
        }

        //Updating Individual Contact Information  
        $('#btnIndContactInfoSave').click(function () {

            if (validateIndividualContactInfoValues()) {
                $("#loading").show();

                var clickedButton = $(this);
                var values = { "emailID": $('#txtIndEmail').val() }
                var individualContactInformationValues = {
                    "TelephoneCountryCode": $('#txtIndTelephoneCountryCode').val(),
                    "TelephoneNumber": $('#txtIndTelephone').val(),
                    "MobileCountryCode": $('#txtIndMobileCountryCode').val(),
                    "MobileNumber": $('#txtIndMobile').val(),
                    "EmailID": $('#txtIndEmail').val()
                }

                //Post request to check if email already exists          
                $.post("@Url.Action("CheckIfDuplicateEmail", "Profile")", values, function (data) {
                    if (data == false) {
                        //Post request to update Trustee Cmpy Contact info
                        $.post("@Url.Action("UpdateIndividualContactInforamation", "Profile")", individualContactInformationValues, function (data) {
                            if (data == true) {
                                $("#loading").hide();

                                $('#personalInfo').prepend('<div class="alert alert-success"><a href="#" class="close" data-dismiss="alert" title="Close">&times;</a>You have successfully edited your profile.</div>');

                                $('#lblTelCountryCode').text($('#txtIndTelephoneCountryCode').val());
                                $('#lblTelePhoneNumber').text($('#txtIndTelephone').val());
                                $('#lblMobileCountryCode').text($('#txtIndMobileCountryCode').val());
                                $('#lblMobileNumber').text($('#txtIndMobile').val());
                                $('#lblEmailAddress').text($('#txtIndEmail').val());

                                clickedButton.parent().prev('.content-section').find('.toggle-show').toggle();
                                clickedButton.parent().prev('.content-section').find('.toggle-hide').toggle();
                                clickedButton.parent().parent().find('.toggleContact-link').show();
                                clickedButton.parent().hide();
                            }
                            else {
                                $("#loading").hide();
                                $('#modalConfirmError').modal('show');
                            }
                        });
                    }
                    else if (data == true) {
                        $("#loading").hide();
                        $('#txtIndEmail').after('<span class="requiredError">Email already exists!</span>');
                    }
                    else {
                        $('#modalConfirmError').modal('show');
                    }
                });
            }
        });

        //Function to validate Individual Contact Info values
        function validateIndividualContactInfoValues() {
            $('.requiredError').remove();
            var valid = true;
            var regNumeric = new RegExp("^[0-9]*$");
            var regEmail = /^([a-zA-Z0-9_.-])+@@([a-zA-Z0-9_.-])+\.([a-zA-Z])+([a-zA-Z])+/;

            if ($('#txtIndTelephoneCountryCode').val() == '' || !regNumeric.test($('#txtIndTelephoneCountryCode').val()) || $('#txtIndTelephoneCountryCode').val().length > 10) {
                $('#txtIndTelephoneCountryCode').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if ($('#txtIndTelephone').val() == '' || !regNumeric.test($('#txtIndTelephone').val()) || $('#txtIndTelephone').val().length > 15) {
                $('#txtIndTelephone').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if ($('#txtIndMobileCountryCode').val() == '' || !regNumeric.test($('#txtIndMobileCountryCode').val()) || $('#txtIndMobileCountryCode').val().length > 10) {
                $('#txtIndMobileCountryCode').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if ($('#txtIndMobile').val() == '' || !regNumeric.test($('#txtIndMobile').val()) || $('#txtIndMobile').val().length > 15) {
                $('#txtIndMobile').after('<span class="requiredError">*</span>');
                valid = false;
            }
            if (!regEmail.test($('#txtIndEmail').val()) || $('#txtIndEmail').val().length > 50) {
                $('#txtIndEmail').after('<span class="requiredError">*</span>');
                valid = false;
            }

            return valid;
        }
    </script>
}