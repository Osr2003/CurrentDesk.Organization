/* **************************************************************
* File Name     :- L_TicketSizeBO.cs
* Author        :- Mukesh Nayak
* Copyright     :- Mindfire Solutions 
* Date          :- 25thd Dec 2012
* Modified Date :- 2nd Jan 2013
* Description   :- This file with all the buisness logic Related to L_TicketSize.
****************************************************************/

#region Namespace
using System;
using System.Linq;
using System.Collections.Generic;
using CurrentDesk.Models;
using CurrentDesk.Repository.Utility;
#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template at 12/25/2012 2:56:23 PM
//	   and this file should not get overridden 
//
//     Add your own data access methods.
// </auto-generated>
//------------------------------------------------------------------------------ 
	
namespace CurrentDesk.Repository.CurrentDesk
{   
    /// <summary>
    /// Buisness Object For L_TicketSize
    /// </summary>
	public class L_TicketSizeBO
	{
        /// <summary>
        /// This Function Will return all the TicketSize
        /// </summary>
        /// <returns></returns>
        public List<L_TicketSize> GetTickets()
        {

            try
            {
                var ticketSizeKey = CacheKey.CDS_TICKETSIZES;
                var ticketSizeList = new List<L_TicketSize>();

                if (StaticCache.Exist(ticketSizeKey))
                {
                    ticketSizeList = (List<L_TicketSize>)StaticCache.Get(ticketSizeKey);
                }
                else
                {
                    using (var unitOfWork = new EFUnitOfWork())
                    {
                        var lTicketSizeRepo =
                            new L_TicketSizeRepository(new EFRepository<L_TicketSize>(), unitOfWork);

                        //Returning List Of Demo Lead
                        ticketSizeList =  lTicketSizeRepo.All().ToList();

                        StaticCache.Max(ticketSizeKey, ticketSizeList);
                    }
                }

                return ticketSizeList;
            }
            catch(Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }
	}
}