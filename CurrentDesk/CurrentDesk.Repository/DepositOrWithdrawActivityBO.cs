using System;
using CurrentDesk.Models;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template at 08-07-13 11:27:20 AM
//	   and this file should not get overridden 
//
//     Add your own data access methods.
// </auto-generated>
//------------------------------------------------------------------------------ 
	
namespace CurrentDesk.Repository.CurrentDesk
{   
	public class DepositOrWithdrawActivityBO
	{
		// Add your own data access methods here.  If you wish to
		// expose your public method to a WCF service, marked them with
		// the attribute [NCPublish], and another T4 template will generate your service contract

        /// <summary>
        /// This method inserts new deposit or withdraw activity deatails in table
        /// </summary>
        /// <param name="pkUsrActId">pkUsrActId</param>
        /// <param name="type">type</param>
        /// <param name="currId">currId</param>
        /// <param name="amount">amount</param>
        /// <param name="accNumber">accNumber</param>
        /// <param name="status">status</param>
        public void InsertDepositOrWithdrawActivityDetails(int pkUsrActId, string type, int currId, decimal amount, string accNumber, int? bankID, string status)
        {
            try
            {
                using (var unitOfWork = new EFUnitOfWork())
                {
                    var depWithdrwActRepo =
                        new DepositOrWithdrawActivityRepository(new EFRepository<DepositOrWithdrawActivity>(), unitOfWork);

                    DepositOrWithdrawActivity newActivity = new DepositOrWithdrawActivity();
                    newActivity.FK_UserActivityID = pkUsrActId;
                    newActivity.Type = type;
                    newActivity.FK_CurrencyID = currId;
                    newActivity.Amount = amount;
                    newActivity.AccountNumber = accNumber;
                    newActivity.FK_BankID = bankID;
                    newActivity.TransferStatus = status;

                    depWithdrwActRepo.Add(newActivity);
                    depWithdrwActRepo.Save();
                }
            }
            catch (Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }
	}
}