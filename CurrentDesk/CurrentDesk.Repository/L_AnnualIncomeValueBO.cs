using System;
using System.Linq;
using System.Collections.Generic;
using CurrentDesk.Models;
using System.Data.Objects;
using CurrentDesk.DAL;
using CurrentDesk.Repository.Utility;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template at 12/25/2012 2:56:23 PM
//	   and this file should not get overridden 
//
//     Add your own data access methods.
// </auto-generated>
//------------------------------------------------------------------------------ 
	
namespace CurrentDesk.Repository.CurrentDesk
{   
	public class L_AnnualIncomeValueBO
	{
        /// <summary>
        /// This Function Will return all the estimated annual income values
        /// </summary>
        /// <returns></returns>
        public List<L_AnnualIncomeValue> GetEstimatedAnnualIncomeValues()
        {
            try
            {
                var annualIncomeKey = CacheKey.CDS_ANNUALINCOME;
                var annualIncomeList = new List<L_AnnualIncomeValue>();

                if (StaticCache.Exist(annualIncomeKey))
                {
                    annualIncomeList = (List<L_AnnualIncomeValue>)StaticCache.Get(annualIncomeKey);
                }
                else
                {
                    using (var unitOfWork = new EFUnitOfWork())
                    {
                        var lAnnualIncomeRepo =
                            new L_AnnualIncomeValueRepository(new EFRepository<L_AnnualIncomeValue>(), unitOfWork);

                        //Returning list of annual income values
                        annualIncomeList = lAnnualIncomeRepo.All().ToList();

                        //Store it into the cache
                        StaticCache.Max(annualIncomeKey, annualIncomeList);

                    }
                }

                return annualIncomeList;
            }
            catch(Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }

        /// <summary>
        /// This Function will get the selected annula income
        /// depending upon the annual income ID
        /// </summary>
        /// <param name="annualIncomeID"></param>
        /// <returns></returns>
        public string GetSelectedAnnualIncome(int annualIncomeID)
        {
            try
            {
                return GetEstimatedAnnualIncomeValues().
                    Where(anIcm => anIcm.PK_AnnualIncomeID == annualIncomeID).
                    Select(anIcm => anIcm.AnnualIncome).SingleOrDefault();
                
                //using (var unitOfWork = new EFUnitOfWork())
                //{
                //    var annualIncomeRepo =
                //        new L_AnnualIncomeValueRepository(new EFRepository<L_AnnualIncomeValue>(), unitOfWork);

                //    //Creating annualIncome Objeset to Query
                //    ObjectSet<L_AnnualIncomeValue> annualIncomeObjSet =
                //      ((CurrentDeskClientsEntities)annualIncomeRepo.Repository.UnitOfWork.Context).L_AnnualIncomeValue;

                //    //Return the selected string
                //    return annualIncomeObjSet.Where(anIcm => anIcm.PK_AnnualIncomeID == annualIncomeID).
                //        Select(anIcm => anIcm.AnnualIncome).SingleOrDefault();
                //}
            }
            catch(Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }

		
	}
}