using System;
using System.Linq;
using System.Collections.Generic;
using CurrentDesk.Models;
using System.Data.Objects;
using CurrentDesk.DAL;
using CurrentDesk.Repository.Utility;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template at 1/2/2013 5:37:12 PM
//	   and this file should not get overridden 
//
//     Add your own data access methods.
// </auto-generated>
//------------------------------------------------------------------------------ 
	
namespace CurrentDesk.Repository.CurrentDesk
{   
	public class L_AccountCodeBO
	{

        /// <summary>
        /// This Function Will return all the AccountCODE
        /// </summary>
        /// <returns></returns>
        public List<L_AccountCode> GetAccountCodes()
        {
            try
            {
                var accountCodeKey = CacheKey.CDS_ACCOUNTCODE;
                var accountCodeList = new List<L_AccountCode>();

                if (StaticCache.Exist(accountCodeKey))
                {
                    accountCodeList = (List<L_AccountCode>)StaticCache.Get(accountCodeKey);
                }
                else
                {
                    using (var unitOfWork = new EFUnitOfWork())
                    {
                        var lAccountRepo =
                        new L_AccountCodeRepository(new EFRepository<L_AccountCode>(), unitOfWork);

                        //Returning List Of Demo Lead
                        accountCodeList = lAccountRepo.All().ToList();

                        //Store it into the cache
                        StaticCache.Max(accountCodeKey, accountCodeList);
                    }
                }

                return accountCodeList;
            }
            catch(Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }

        /// <summary>
        /// This Function Will return all the SelectedAccount
        /// </summary>
        /// <returns></returns>
        public List<L_AccountCode> GetSelectedAccount(int formAccountTypeID)
        {

            try
            {
                return GetAccountCodes().Where(actCode => actCode.FK_AccountFormTypeID == formAccountTypeID).ToList();
            }
            catch(Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }
		
	}
}