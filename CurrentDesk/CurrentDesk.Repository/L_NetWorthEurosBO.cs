using System;
using System.Linq;
using System.Collections.Generic;
using CurrentDesk.Models;
using System.Data.Objects;
using CurrentDesk.DAL;
using CurrentDesk.Repository.Utility;

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template at 12/25/2012 2:56:23 PM
//	   and this file should not get overridden 
//
//     Add your own data access methods.
// </auto-generated>
//------------------------------------------------------------------------------ 

namespace CurrentDesk.Repository.CurrentDesk
{
    public class L_NetWorthEurosBO
    {
        /// <summary>
        /// This Function Will return all the net worth euros values
        /// </summary>
        /// <returns></returns>
        public List<L_NetWorthEuros> GetNetWorthEurosValues()
        {

            try
            {
                var netWorthKey = CacheKey.CDS_NETWORTHEUROS;
                var netWorthList = new List<L_NetWorthEuros>();

                if (StaticCache.Exist(netWorthKey))
                {
                    netWorthList = (List<L_NetWorthEuros>)StaticCache.Get(netWorthKey);
                }
                else
                {
                    using (var unitOfWork = new EFUnitOfWork())
                    {
                        var lNetWorthEurosRepo =
                            new L_NetWorthEurosRepository(new EFRepository<L_NetWorthEuros>(), unitOfWork);

                        //Returning list of net worth euros look up values 
                        netWorthList =  lNetWorthEurosRepo.All().ToList();

                        StaticCache.Max(netWorthKey, netWorthList);
                    }
                }

                return netWorthList;
            }
            catch(Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }

        /// <summary>
        /// This Function will get the selected nethworths
        /// depending upon the networthID
        /// </summary>
        /// <param name="netWorthEurosID"></param>
        /// <returns></returns>
        public string GetSelectedNetWorthEuros(int netWorthEurosID)
        {
            try
            {
                return GetNetWorthEurosValues().Where(netWrt => netWrt.PK_WorthID == netWorthEurosID).
                        Select(netWrt => netWrt.Worth).SingleOrDefault();

                //using (var unitOfWork = new EFUnitOfWork())
                //{
                //    var netWorthRepo =
                //           new L_NetWorthEurosRepository(new EFRepository<L_NetWorthEuros>(), unitOfWork);

                //    //Creating annualIncome Objeset to Query
                //    ObjectSet<L_NetWorthEuros> netWorthObjSet =
                //      ((CurrentDeskClientsEntities)netWorthRepo.Repository.UnitOfWork.Context).L_NetWorthEuros;

                //    //Return the selected string
                //    return netWorthObjSet.Where(netWrt => netWrt.PK_WorthID == netWorthEurosID).
                //        Select(netWrt => netWrt.Worth).SingleOrDefault();
                //}
            }
            catch(Exception ex)
            {
                CommonErrorLogger.CommonErrorLog(ex, System.Reflection.MethodBase.GetCurrentMethod().Name);
                throw;
            }
        }

    }
}